{
    "docs": [
        {
            "location": "/", 
            "text": "Overview\n\n\nMixapp.io - PaaS for real-time data sync across applications, platforms \nand databases based on BPM system. The platform allows you to combine \ndisparate applications (CRM, ERP, Mobile Apps, etc) and devices into a \nsingle system. Automate their interaction and optimize the workflows \nwith the built-in bpm engine.\n\n\nVisual process designer and multiple connectors for integration with \napplications, crm, databases will accelerate the process of bringing the \nproduct to the market and reduce the cost of system development", 
            "title": "Overview"
        }, 
        {
            "location": "/#overview", 
            "text": "Mixapp.io - PaaS for real-time data sync across applications, platforms \nand databases based on BPM system. The platform allows you to combine \ndisparate applications (CRM, ERP, Mobile Apps, etc) and devices into a \nsingle system. Automate their interaction and optimize the workflows \nwith the built-in bpm engine.  Visual process designer and multiple connectors for integration with \napplications, crm, databases will accelerate the process of bringing the \nproduct to the market and reduce the cost of system development", 
            "title": "Overview"
        }, 
        {
            "location": "/main/process/", 
            "text": "Process is the main component of the bpm engine and describes all automation \nand integration actions. The process contains all instructions on interaction \nbetween connectors. \n\n\nStructure\n\n\n{\n    id: \n,\n    title: \n,\n    connectors: [],\n    script: \n\n}", 
            "title": "Process"
        }, 
        {
            "location": "/main/process/#structure", 
            "text": "{\n    id:  ,\n    title:  ,\n    connectors: [],\n    script:  \n}", 
            "title": "Structure"
        }, 
        {
            "location": "/main/connector/", 
            "text": "The connector is one of the main components of the bpm engine. It plays \nthe role of a handler, allowing to complete such actions as integrating \nwith different CRM systems, importing and exporting data into the database, \nas well as interacting with a number of external services etc.\n\n\nStructure\n\n\n{\n    id: \n,      \n    name: \n,\n    description: \n,\n    type: \n,       \n    code: {\n        before: \n,\n        after: \n,\n        script: \n\n    },       \n    params: {},    \n    previousConnectors: [],\n    nextConnectors: []\n}\n\n\n\n\n\nThe connector logic is written in JavaScript. The connector has 3 sections \nfor the code \u2013 Before, After and the main Script section. If you intend \nto develop your own solution, it is advisable to write the connector code \nin the Script section. However, if you would like to override a method or \ncreate additional handlers, use the sections Before and After.", 
            "title": "Connector"
        }, 
        {
            "location": "/main/connector/#structure", 
            "text": "{\n    id:  ,      \n    name:  ,\n    description:  ,\n    type:  ,       \n    code: {\n        before:  ,\n        after:  ,\n        script:  \n    },       \n    params: {},    \n    previousConnectors: [],\n    nextConnectors: []\n}  The connector logic is written in JavaScript. The connector has 3 sections \nfor the code \u2013 Before, After and the main Script section. If you intend \nto develop your own solution, it is advisable to write the connector code \nin the Script section. However, if you would like to override a method or \ncreate additional handlers, use the sections Before and After.", 
            "title": "Structure"
        }, 
        {
            "location": "/main/context/", 
            "text": "The main purpose of the context is driving process data from one connector \nto the other. \n\n\nWhen a process is created, a new context is set up at the same time. \nThe context is filled with sections containing id of connectors. Value of connectors an empty object. After each connector handling, the context is saved and stay availabled for the next connector.\n\n\nExample of a context:\n\n\n{\n    \u00abstepId_1\u00bb: {}\n}\n\n\nThe context contains connector sections, where random values may be written.\n\n\nThe context does not provide for creating random sections.", 
            "title": "Context"
        }, 
        {
            "location": "/main/bpmapi/", 
            "text": "A bpm object is accessible in the global connector visibility area. You \nmay use this object in the pre and post section of the connector. The \nobject provides a basic system api for processes, which allows to manage \nprocess behaviour and create new connectors.\n\n\nProperties\n\n\nbpm.connector\n\n\nObject describing current connector\n\n\nbpm.ctx\n\n\nObject of context, intended for working with the it\n\n\nbpm.data\n\n\nThe data object received from the previous connector.\nAlways contains the lastId field, the value of which is the identifier of the previous connector.\n\n\nMethods\n\n\n\n\nPlease note\n\n\nAll methods return the object Promise\n\n\n\n\nWorking with connectors\n\n\nbpm.getConnectorById(id)\n\n\nMethod for obtaining the connector based on its identifier\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\nConnector identifier\n\n\n\n\n\n\n\n\nbpm.reject(requeue)\n\n\nThe method allows to refuse the execution of the current connector. The requeue parameter is responsible for re-executing the connector.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nrequeue\n\n\nbool\n\n\nRe-executing the connector\n\n\n\n\n\n\n\n\nWorking with the Process\n\n\nbpm.setData(data)\n\n\nMethod for transferring data to the next connector. Always contains a lastId field, the value of which is the identifier of the previous connector.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndata\n\n\nobject\n\n\nObject of data for send to next connector\n\n\n\n\n\n\n\n\nbpm.stopProcess()\n\n\nMethod to abort the process\n\n\nbpm.log(msg)\n\n\nMethod to log the process\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nmsg\n\n\nstring\n\n\nLogged message\n\n\n\n\n\n\n\n\nbpm.error(err)\n\n\nMethod to log errors the process\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nerr\n\n\nstring\n\n\nLogged errors\n\n\n\n\n\n\n\n\nWorking with the Storage\n\n\nbpm.storage.get(name, data)\n\n\nThis method is used to select documents from the Storage\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nStorage name\n\n\n\n\n\n\ndata\n\n\nObject\n\n\nStorage protocol\n\n\n\n\n\n\n\n\nbpm.storage.create(name, data)\n\n\nThis method is used to create a document in the Storage\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nStorage name\n\n\n\n\n\n\ndata\n\n\nObject\n\n\nStorage protocol\n\n\n\n\n\n\n\n\nbpm.storage.update(name, data)\n\n\nThis method is used to update a document in the Storage\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nStorage name\n\n\n\n\n\n\ndata\n\n\nObject\n\n\nStorage protocol\n\n\n\n\n\n\n\n\nbpm.storage.remove(name, data)\n\n\nThis method is used to delete documents from the Storage\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nStorage name\n\n\n\n\n\n\ndata\n\n\nObject\n\n\nStorage protocol\n\n\n\n\n\n\n\n\nbpm.storage.count(name, data)\n\n\nThis method is used to count the number of documents in the Storage\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nStorage name\n\n\n\n\n\n\ndata\n\n\nObject\n\n\nStorage protocol", 
            "title": "API"
        }, 
        {
            "location": "/main/bpmapi/#properties", 
            "text": "", 
            "title": "Properties"
        }, 
        {
            "location": "/main/bpmapi/#bpmconnector", 
            "text": "Object describing current connector", 
            "title": "bpm.connector"
        }, 
        {
            "location": "/main/bpmapi/#bpmctx", 
            "text": "Object of context, intended for working with the it", 
            "title": "bpm.ctx"
        }, 
        {
            "location": "/main/bpmapi/#bpmdata", 
            "text": "The data object received from the previous connector.\nAlways contains the lastId field, the value of which is the identifier of the previous connector.", 
            "title": "bpm.data"
        }, 
        {
            "location": "/main/bpmapi/#methods", 
            "text": "Please note  All methods return the object Promise", 
            "title": "Methods"
        }, 
        {
            "location": "/main/bpmapi/#working-with-connectors", 
            "text": "", 
            "title": "Working with connectors"
        }, 
        {
            "location": "/main/bpmapi/#bpmgetconnectorbyidid", 
            "text": "Method for obtaining the connector based on its identifier     Name  Type  Description      id  String  Connector identifier", 
            "title": "bpm.getConnectorById(id)"
        }, 
        {
            "location": "/main/bpmapi/#bpmrejectrequeue", 
            "text": "The method allows to refuse the execution of the current connector. The requeue parameter is responsible for re-executing the connector.     Name  Type  Description      requeue  bool  Re-executing the connector", 
            "title": "bpm.reject(requeue)"
        }, 
        {
            "location": "/main/bpmapi/#working-with-the-process", 
            "text": "", 
            "title": "Working with the Process"
        }, 
        {
            "location": "/main/bpmapi/#bpmsetdatadata", 
            "text": "Method for transferring data to the next connector. Always contains a lastId field, the value of which is the identifier of the previous connector.     Name  Type  Description      data  object  Object of data for send to next connector", 
            "title": "bpm.setData(data)"
        }, 
        {
            "location": "/main/bpmapi/#bpmstopprocess", 
            "text": "Method to abort the process", 
            "title": "bpm.stopProcess()"
        }, 
        {
            "location": "/main/bpmapi/#bpmlogmsg", 
            "text": "Method to log the process     Name  Type  Description      msg  string  Logged message", 
            "title": "bpm.log(msg)"
        }, 
        {
            "location": "/main/bpmapi/#bpmerrorerr", 
            "text": "Method to log errors the process     Name  Type  Description      err  string  Logged errors", 
            "title": "bpm.error(err)"
        }, 
        {
            "location": "/main/bpmapi/#working-with-the-storage", 
            "text": "", 
            "title": "Working with the Storage"
        }, 
        {
            "location": "/main/bpmapi/#bpmstoragegetname-data", 
            "text": "This method is used to select documents from the Storage     Name  Type  Description      name  String  Storage name    data  Object  Storage protocol", 
            "title": "bpm.storage.get(name, data)"
        }, 
        {
            "location": "/main/bpmapi/#bpmstoragecreatename-data", 
            "text": "This method is used to create a document in the Storage     Name  Type  Description      name  String  Storage name    data  Object  Storage protocol", 
            "title": "bpm.storage.create(name, data)"
        }, 
        {
            "location": "/main/bpmapi/#bpmstorageupdatename-data", 
            "text": "This method is used to update a document in the Storage     Name  Type  Description      name  String  Storage name    data  Object  Storage protocol", 
            "title": "bpm.storage.update(name, data)"
        }, 
        {
            "location": "/main/bpmapi/#bpmstorageremovename-data", 
            "text": "This method is used to delete documents from the Storage     Name  Type  Description      name  String  Storage name    data  Object  Storage protocol", 
            "title": "bpm.storage.remove(name, data)"
        }, 
        {
            "location": "/main/bpmapi/#bpmstoragecountname-data", 
            "text": "This method is used to count the number of documents in the Storage     Name  Type  Description      name  String  Storage name    data  Object  Storage protocol", 
            "title": "bpm.storage.count(name, data)"
        }, 
        {
            "location": "/main/newconnector/", 
            "text": "Creating your own connector\n\n\nYou can download your own connector that is tailored for your tasks.\n\n\nThe connector is accessible from your personal account: Process Editing -\n List of Connectors -\n Upload a Connector.\n\n\nThe connector is described with the help of a JSON structure that is configured as follows:\n\n\n{\n    \nname\n: \nMy own connector\n,\n    \nimage\n:\n,\n    \ndescription\n: \nThe useful connector\n,\n    \ntype\n: \ncustom\n,\n    \ncode\n: {\n        \nbefore\n: \n,\n        \nafter\n: \n,\n        \nscript\n: \nJS code\n\n    },\n    \nparams\n: {\n        \ntype\n: \nstring\n,\n        \n\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nstring\n\n\nConnector name. Obligatory parameter.\n\n\n\n\n\n\nimage\n\n\nstring\n\n\nConnector logo in base64 format.\n\n\n\n\n\n\ndescription\n\n\nstring\n\n\nConnector description.\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nConnector type. \"custom\" should always be used.\n\n\n\n\n\n\ncode\n\n\nobject\n\n\nObject describing the executed connector code\n\n\n\n\n\n\nparams\n\n\nobject\n\n\nThis section contains descriptions of parameters, the values of which will be requested of the user when editing the connector. They can be further used while executing the connector code.\n\n\n\n\n\n\n\n\nCode of connector\n\n\nThe code section is configured as follows:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbefore\n\n\nstring\n\n\nThe code described in this section will be run before the main executed code. It is optional.\n\n\n\n\n\n\nscript\n\n\nstring\n\n\nMain executed code of the connector. This code is required.\n\n\n\n\n\n\nafter\n\n\nstring\n\n\nThe code described in this section will be run after the main code executed. It is optional.\n\n\n\n\n\n\n\n\nParams of connector\n\n\nEach parameter is described by a section that has the following configuration:\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nhandler\n\n\nstring\n\n\nJavaScript - a code that helps validate the values of parameters transmitted while saving the connector.\n\n\n\n\n\n\ntype\n\n\nstring\n\n\nParameter type that can adopt the following values: string, select, boolean, multistring, number, date, code;\n\n\n\n\n\n\ntitle\n\n\nstring\n\n\nParameter heading that will appear in the user interface.\n\n\n\n\n\n\nvalues\n\n\narray of objects\n\n\nThis section is only needed for the \"select\" type. It inserts the values into a drop-down list. Example: \nvalues: [{title: \"Man\", value: \"1\"}, {title: \"Woman\", value: \"2\"}]\n\n\n\n\n\n\nvisible\n\n\nobject\n\n\nObject describing dependent parameters, where \"property\" stands for the name of another parameter, and \"value\" stands for the value at which the current field will be displayed. Example: \nvisible:{\"paramName\": \"value\"}\n\n\n\n\n\n\norder\n\n\ninteger\n\n\nDisplaying the field while editing under a user name.\n\n\n\n\n\n\nschema\n\n\nobject\n\n\nNot implemented yet\n\n\n\n\n\n\ndefaultValue\n\n\nobject\n\n\nNot implemented yet\n\n\n\n\n\n\n\n\nExample of a uploaded connector\n\n\n{  \n    \nimage\n : \n, \n    \nname\n : \nWebhook\n,  \n    \ndescription\n : \nWebhooks allow you to accept external http requests\n, \n    \ntype\n : \ncustom\n, \n    \ncode\n : {\n        \nbefore\n : \n, \n        \nafter\n : \n, \n        \nscript\n : \nJS code\n\n    }, \n    \nparams\n : {\n        \nmethod\n : {\n            \nvalues\n : [\n                {\n                    \nvalue\n : \nPOST\n, \n                    \ntitle\n : \nPOST\n\n                }, \n                {\n                    \ntitle\n : \nGET\n, \n                    \nvalue\n : \nGET\n\n                }\n            ], \n            \nhandler\n : \nif (params[name] !== \nPOST\n \n params[name] !== \nGET\n) {\\n\\tthrow new Error(\nUnknown method\n);\\n}\n, \n            \ntype\n : \nselect\n, \n            \ntitle\n : \nHttp method\n\n        }, \n        \naction\n : {\n            \nhandler\n : \nif (typeof params[name] !== \nstring\n || params[name].length \n 5) {\\n\\tthrow new Error(name + \n is empty or less than 5 chars\n);\\n}\n, \n            \ntype\n : \nstring\n, \n            \ntitle\n : \nEndpoint\n\n        }, \n        \nonce\n : {\n            \nhandler\n : \nif (typeof params[name] !== \nboolean\n) {\\n\\tthrow new Error(name + \n must be boolean of type\n);\\n}\n, \n            \ntype\n : \nboolean\n, \n            \ntitle\n : \nOnce\n\n        }\n    }\n}", 
            "title": "Creating connector"
        }, 
        {
            "location": "/main/newconnector/#creating-your-own-connector", 
            "text": "You can download your own connector that is tailored for your tasks.  The connector is accessible from your personal account: Process Editing -  List of Connectors -  Upload a Connector.  The connector is described with the help of a JSON structure that is configured as follows:  {\n     name :  My own connector ,\n     image : ,\n     description :  The useful connector ,\n     type :  custom ,\n     code : {\n         before :  ,\n         after :  ,\n         script :  JS code \n    },\n     params : {\n         type :  string ,\n         \n    }\n}     Name  Type  Description      name  string  Connector name. Obligatory parameter.    image  string  Connector logo in base64 format.    description  string  Connector description.    type  string  Connector type. \"custom\" should always be used.    code  object  Object describing the executed connector code    params  object  This section contains descriptions of parameters, the values of which will be requested of the user when editing the connector. They can be further used while executing the connector code.", 
            "title": "Creating your own connector"
        }, 
        {
            "location": "/main/newconnector/#code-of-connector", 
            "text": "The code section is configured as follows:     Name  Type  Description      before  string  The code described in this section will be run before the main executed code. It is optional.    script  string  Main executed code of the connector. This code is required.    after  string  The code described in this section will be run after the main code executed. It is optional.", 
            "title": "Code of connector"
        }, 
        {
            "location": "/main/newconnector/#params-of-connector", 
            "text": "Each parameter is described by a section that has the following configuration:     Name  Type  Description      handler  string  JavaScript - a code that helps validate the values of parameters transmitted while saving the connector.    type  string  Parameter type that can adopt the following values: string, select, boolean, multistring, number, date, code;    title  string  Parameter heading that will appear in the user interface.    values  array of objects  This section is only needed for the \"select\" type. It inserts the values into a drop-down list. Example:  values: [{title: \"Man\", value: \"1\"}, {title: \"Woman\", value: \"2\"}]    visible  object  Object describing dependent parameters, where \"property\" stands for the name of another parameter, and \"value\" stands for the value at which the current field will be displayed. Example:  visible:{\"paramName\": \"value\"}    order  integer  Displaying the field while editing under a user name.    schema  object  Not implemented yet    defaultValue  object  Not implemented yet", 
            "title": "Params of connector"
        }, 
        {
            "location": "/main/newconnector/#example-of-a-uploaded-connector", 
            "text": "{  \n     image  :  , \n     name  :  Webhook ,  \n     description  :  Webhooks allow you to accept external http requests , \n     type  :  custom , \n     code  : {\n         before  :  , \n         after  :  , \n         script  :  JS code \n    }, \n     params  : {\n         method  : {\n             values  : [\n                {\n                     value  :  POST , \n                     title  :  POST \n                }, \n                {\n                     title  :  GET , \n                     value  :  GET \n                }\n            ], \n             handler  :  if (params[name] !==  POST    params[name] !==  GET ) {\\n\\tthrow new Error( Unknown method );\\n} , \n             type  :  select , \n             title  :  Http method \n        }, \n         action  : {\n             handler  :  if (typeof params[name] !==  string  || params[name].length   5) {\\n\\tthrow new Error(name +   is empty or less than 5 chars );\\n} , \n             type  :  string , \n             title  :  Endpoint \n        }, \n         once  : {\n             handler  :  if (typeof params[name] !==  boolean ) {\\n\\tthrow new Error(name +   must be boolean of type );\\n} , \n             type  :  boolean , \n             title  :  Once \n        }\n    }\n}", 
            "title": "Example of a uploaded connector"
        }, 
        {
            "location": "/storage/", 
            "text": "The storage is intended for storing various data. The storage is in fact\u00a0\nan\u00a0HTTP\u00a0protocol-based\u00a0add-on to the direct access to the database \n(we use MongoDB).\n\n\nWe recommend to use the storage for keeping permanent data, such as users, \ngroups, goods and uploads from external systems. The storage may also be \nused for connector settings, conditions, time values etc.\n\n\nStorage structure\n\n\n{\n    id: \n,\n    name: \n,\n    ACL: {\n        create: [],\n        read: [],\n        update: [],\n        delete: []\n    }\n}\n\n\n\n\n\nDocument structure in the storage\n\n\nWe do not impose any restrictions on the structure of your data. You \ndetermine it yourself.", 
            "title": "Overview"
        }, 
        {
            "location": "/storage/protocol/", 
            "text": "We use the following protocol to work with the storage\n\n\n {\n     query: {},\n     doc: {},\n     docs: [],\n     limit: 10,\n     fields: {},\n     sort: {},\n     skip: 0     \n }\n\n\n\n\n\nquery\n - object to form selection criteria\n\n\ndoc\n - object to update a document\n\n\ndocs\n - array of objects to create documents\n\n\nlimit\n - parameter setting a limit for chosen documents\n\n\nfields\n - object describing what fields will be chosen in the document\n\n\nsort\n - object describing rules of sorting\n\n\nskip\n - parameter setting the margin for selection", 
            "title": "Protocol"
        }, 
        {
            "location": "/restapi/user/", 
            "text": "Working with the user\n\n\nRegistering in the system\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/signup\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n\n\n\nBody:\n\n\n{\n    \nemail\n:\nuser@domain.com\n,\n    \nname\n: \nYourName\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n    \"password\": \"password\",\n    \"token\": \"token\",\n    \"user\": {\n        \"avatar\": \"\",\n        \"email\": \"user@domain.com\",\n        \"id\": \"58ecb9b427218c4f59ac1db9\",\n        \"last_login\": \"2017-04-11T14:10:44.761368829+03:00\",\n        \"name\": \"YourName\",\n        \"password\": \"b973b7e8ee9e6400e0dff36ca8fb6a96\",\n        \"reg_date\": \"2017-04-11T14:10:44.761368864+03:00\",\n        \"workplaces\": []\n     }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nAuthorising in the system\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/signin\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n\n\n\nBody:\n\n\n{\n    \nemail\n:\nuser@domain.com\n,\n    \npassword\n: \nYourPassword\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n    \"token\": \"token\",\n    \"user\": {\n        \"avatar\": \"\",\n        \"email\": \"user@domain.com\",\n        \"id\": \"58ecb9b427218c4f59ac1db9\",\n        \"last_login\": \"2017-04-11T14:10:44.761368829+03:00\",\n        \"name\": \"YourName\",\n        \"password\": \"b973b7e8ee9e6400e0dff36ca8fb6a96\",\n        \"reg_date\": \"2017-04-11T14:10:44.761368864+03:00\",\n        \"workplaces\": []\n     }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nUpdating user info\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/update\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n\n\n\nBody:\n\n\n{\n    \nname\n: \n\u041d\u0438\u043a\u0438111\u0442\u0430\n,\n    \navatar\n: \nwefwef\n,\n    \npassword\n: \nNewPassword | empty\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n    \"user\": {\n        \"avatar\": \"\",\n        \"email\": \"user@domain.com\",\n        \"id\": \"58ecb9b427218c4f59ac1db9\",\n        \"last_login\": \"2017-04-11T14:10:44.761368829+03:00\",\n        \"name\": \"YourName\",\n        \"password\": \"b973b7e8ee9e6400e0dff36ca8fb6a96\",\n        \"reg_date\": \"2017-04-11T14:10:44.761368864+03:00\",\n        \"workplaces\": []\n     }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nPassword reset\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/repair\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n\n\n\nBody:\n\n\n{\n    \nemail\n:\nuser@domain.com\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\nIf the request is executed successfully, an e-mail containing a link to generate a new password will be sent.\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nPassword reset - setting a new password\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/repair/:token\n\n\ntoken\n - code from the e-mail sent after password reset was requested\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\n\n\n\n\n\nBody:\n\n\n{\n    \npassword\n: \nNewPassword\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\nIf the request is executed successfully, an e-mail containing a link to generate a new password will be sent.\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "User"
        }, 
        {
            "location": "/restapi/user/#working-with-the-user", 
            "text": "", 
            "title": "Working with the user"
        }, 
        {
            "location": "/restapi/user/#registering-in-the-system", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/signup  Method:  POST  Headers:  Content-Type: application/json  Body:  {\n     email : user@domain.com ,\n     name :  YourName \n}  Response:   Success  {\n    \"password\": \"password\",\n    \"token\": \"token\",\n    \"user\": {\n        \"avatar\": \"\",\n        \"email\": \"user@domain.com\",\n        \"id\": \"58ecb9b427218c4f59ac1db9\",\n        \"last_login\": \"2017-04-11T14:10:44.761368829+03:00\",\n        \"name\": \"YourName\",\n        \"password\": \"b973b7e8ee9e6400e0dff36ca8fb6a96\",\n        \"reg_date\": \"2017-04-11T14:10:44.761368864+03:00\",\n        \"workplaces\": []\n     }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Registering in the system"
        }, 
        {
            "location": "/restapi/user/#authorising-in-the-system", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/signin  Method:  POST  Headers:  Content-Type: application/json  Body:  {\n     email : user@domain.com ,\n     password :  YourPassword \n}  Response:   Success  {\n    \"token\": \"token\",\n    \"user\": {\n        \"avatar\": \"\",\n        \"email\": \"user@domain.com\",\n        \"id\": \"58ecb9b427218c4f59ac1db9\",\n        \"last_login\": \"2017-04-11T14:10:44.761368829+03:00\",\n        \"name\": \"YourName\",\n        \"password\": \"b973b7e8ee9e6400e0dff36ca8fb6a96\",\n        \"reg_date\": \"2017-04-11T14:10:44.761368864+03:00\",\n        \"workplaces\": []\n     }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Authorising in the system"
        }, 
        {
            "location": "/restapi/user/#updating-user-info", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/update  Method:  POST  Headers:  Content-Type: application/json  Body:  {\n     name :  \u041d\u0438\u043a\u0438111\u0442\u0430 ,\n     avatar :  wefwef ,\n     password :  NewPassword | empty \n}  Response:   Success  {\n    \"user\": {\n        \"avatar\": \"\",\n        \"email\": \"user@domain.com\",\n        \"id\": \"58ecb9b427218c4f59ac1db9\",\n        \"last_login\": \"2017-04-11T14:10:44.761368829+03:00\",\n        \"name\": \"YourName\",\n        \"password\": \"b973b7e8ee9e6400e0dff36ca8fb6a96\",\n        \"reg_date\": \"2017-04-11T14:10:44.761368864+03:00\",\n        \"workplaces\": []\n     }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Updating user info"
        }, 
        {
            "location": "/restapi/user/#password-reset", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/repair  Method:  POST  Headers:  Content-Type: application/json  Body:  {\n     email : user@domain.com \n}  Response:   Success  {\n  \"result\": true\n}   If the request is executed successfully, an e-mail containing a link to generate a new password will be sent.   Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Password reset"
        }, 
        {
            "location": "/restapi/user/#password-reset-setting-a-new-password", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/repair/:token  token  - code from the e-mail sent after password reset was requested  Method:  POST  Headers:  Content-Type: application/json  Body:  {\n     password :  NewPassword \n}  Response:   Success  {\n  \"result\": true\n}   If the request is executed successfully, an e-mail containing a link to generate a new password will be sent.   Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Password reset - setting a new password"
        }, 
        {
            "location": "/restapi/workspaces/", 
            "text": "Working with workplaces\n\n\nCreating a workplace\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n    \nname\n:\nUniqueWorkplaceName\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"name\": \"unique\"\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nRequesting information about the workplace\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:name\n\n\nname\n - workplace name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"name\": \"unique\"\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nDeleting the workplace\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:name\n\n\nname\n - workplace name\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nGetting OIDC settings\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:name/oidc\n\n\nname\n - workplace name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"collection\": \"users\",\n    \"token\": \"\nsecret_string\n\"\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nUpdating OIDC settings\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:name/oidc\n\n\nname\n - workplace name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{collection: \nuser_list\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"collection\": \"user_list\",\n    \"token\": \"\nsecret_string\n\"\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nGenerate a new token for OIDC\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:name/oidc/token\n\n\nname\n - workplace name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"collection\": \"user_list\",\n    \"token\": \"\nsecret_string\n\"\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Workplaces"
        }, 
        {
            "location": "/restapi/workspaces/#working-with-workplaces", 
            "text": "", 
            "title": "Working with workplaces"
        }, 
        {
            "location": "/restapi/workspaces/#creating-a-workplace", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n     name : UniqueWorkplaceName \n}  Response:   Success  {\n  \"result\": {\n    \"name\": \"unique\"\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating a workplace"
        }, 
        {
            "location": "/restapi/workspaces/#requesting-information-about-the-workplace", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:name  name  - workplace name  Method:  GET  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": {\n    \"name\": \"unique\"\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Requesting information about the workplace"
        }, 
        {
            "location": "/restapi/workspaces/#deleting-the-workplace", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:name  name  - workplace name  Method:  DELETE  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": true\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Deleting the workplace"
        }, 
        {
            "location": "/restapi/workspaces/#getting-oidc-settings", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:name/oidc  name  - workplace name  Method:  GET  Headers:  X-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": {\n    \"collection\": \"users\",\n    \"token\": \" secret_string \"\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Getting OIDC settings"
        }, 
        {
            "location": "/restapi/workspaces/#updating-oidc-settings", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:name/oidc  name  - workplace name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {collection:  user_list }  Response:   Success  {\n  \"result\": {\n    \"collection\": \"user_list\",\n    \"token\": \" secret_string \"\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Updating OIDC settings"
        }, 
        {
            "location": "/restapi/workspaces/#generate-a-new-token-for-oidc", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:name/oidc/token  name  - workplace name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": {\n    \"collection\": \"user_list\",\n    \"token\": \" secret_string \"\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Generate a new token for OIDC"
        }, 
        {
            "location": "/restapi/storages/", 
            "text": "Working with the storage and data\n\n\nRequesting list of storages\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages\n\n\nworkplace\n - workplace name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": []\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCreating the storage\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages\n\n\nworkplace\n - workplace name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n  \nname\n: \ntest\n,\n  \nACL\n: {\n    \ncreate\n: [\n*\n],\n    \nread\n: [\n*\n],\n    \nupdate\n: [\n*\n],\n    \ndelete\n: [\n*\n]\n  }\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"ACL\": {\n      \"create\": [\"*\"],\n      \"delete\": [\"*\"],\n      \"read\": [\"*\"],\n      \"update\": [\"*\"]\n    },\n    \"name\": \"test\"\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nRequesting storage information\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name\n\n\nworkplace\n - workplace name\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"ACL\": {\n      \"create\": [],\n      \"delete\": [],\n      \"read\": [],\n      \"update\": []\n    },\n    \"name\": \"test\"\n  }\n}\n\n\n\n\nUpdating the storage\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n  \nACL\n: {\n    \ncreate\n: [],\n    \nread\n: [],\n    \nupdate\n: [],\n    \ndelete\n: []\n  }\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"ACL\": {\n      \"create\": [],\n      \"delete\": [],\n      \"read\": [],\n      \"update\": []\n    },\n    \"name\": \"test\"\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nDeleting the storage\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nIndexes\n\n\nRequesting the list of storage indexes\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name/indexes\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": [\n    {\n      \"Background\": false,\n      \"Bits\": 0,\n      \"BucketSize\": 0,\n      \"DefaultLanguage\": \"\",\n      \"DropDups\": false,\n      \"ExpireAfter\": 0,\n      \"Key\": [\n        \"_id\"\n      ],\n      \"LanguageOverride\": \"\",\n      \"Max\": 0,\n      \"Maxf\": 0,\n      \"Min\": 0,\n      \"Minf\": 0,\n      \"Name\": \"_id_\",\n      \"Sparse\": false,\n      \"Unique\": false,\n      \"Weights\": null\n    }\n  ]\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCreating the index\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name/indexes\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n    \nname\n: \nIndexName\n,\n    \nkey\n: [\n-field1\n,\n+field2\n],\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"Background\": true,\n    \"Bits\": 0,\n    \"BucketSize\": 0,\n    \"DefaultLanguage\": \"\",\n    \"DropDups\": false,\n    \"ExpireAfter\": 0,\n    \"Key\": [\n      \"-field1\",\"+field2\"\n    ],\n    \"LanguageOverride\": \"\",\n    \"Max\": 0,\n    \"Maxf\": 0,\n    \"Min\": 0,\n    \"Minf\": 0,\n    \"Name\": \"IndexName\",\n    \"Sparse\": false,\n    \"Unique\": false,\n    \"Weights\": null\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nDeleting the index\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name/indexes/:indexName\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nindexName\n - index name\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nData\n\n\nRetrieving the list of documents\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /workplaces/:workplace/storages/:name/read\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n    query: {},\n    doc: {},\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": []\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCreating the document\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name/create\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n    query: {},\n    doc: {\n        \nfield\n: \ndata\n\n    },\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"n\": 1,\n    \"ok\": 1\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nUpdating the document\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /workplaces/:workplace/storages/:name/update\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n    query: {\n        \nfield\n: \ndata\n\n    },\n    doc: {\n        \n$set\n: {\n            \nfield\n: \nnew string\n\n        }\n    },\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"n\": 1,\n    \"nModified\": 1,\n    \"ok\": 1\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCounting the documents\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name/count\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n    query: {\n        \nfield\n: \nnew string\n\n    },\n    doc: {},\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": 1\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nDeleting the documents\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/storages/:name/delete\n\n\nworkplace\n - workplace name\n\n\nname\n - storage name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nBody:\n\n\n{\n    query: {},\n    doc: {},\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"n\": 1,\n    \"ok\": 1\n  }\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Storages"
        }, 
        {
            "location": "/restapi/storages/#working-with-the-storage-and-data", 
            "text": "", 
            "title": "Working with the storage and data"
        }, 
        {
            "location": "/restapi/storages/#requesting-list-of-storages", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages  workplace  - workplace name  Method:  GET  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": []\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Requesting list of storages"
        }, 
        {
            "location": "/restapi/storages/#creating-the-storage", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages  workplace  - workplace name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n   name :  test ,\n   ACL : {\n     create : [ * ],\n     read : [ * ],\n     update : [ * ],\n     delete : [ * ]\n  }\n}  Response:   Success  {\n  \"result\": {\n    \"ACL\": {\n      \"create\": [\"*\"],\n      \"delete\": [\"*\"],\n      \"read\": [\"*\"],\n      \"update\": [\"*\"]\n    },\n    \"name\": \"test\"\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating the storage"
        }, 
        {
            "location": "/restapi/storages/#requesting-storage-information", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name  workplace  - workplace name  workplace  - workplace name  name  - storage name  Method:  GET  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": {\n    \"ACL\": {\n      \"create\": [],\n      \"delete\": [],\n      \"read\": [],\n      \"update\": []\n    },\n    \"name\": \"test\"\n  }\n}", 
            "title": "Requesting storage information"
        }, 
        {
            "location": "/restapi/storages/#updating-the-storage", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name  workplace  - workplace name  name  - storage name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n   ACL : {\n     create : [],\n     read : [],\n     update : [],\n     delete : []\n  }\n}  Response:   Success  {\n  \"result\": {\n    \"ACL\": {\n      \"create\": [],\n      \"delete\": [],\n      \"read\": [],\n      \"update\": []\n    },\n    \"name\": \"test\"\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Updating the storage"
        }, 
        {
            "location": "/restapi/storages/#deleting-the-storage", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name  workplace  - workplace name  name  - storage name  Method:  DELETE  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": true\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Deleting the storage"
        }, 
        {
            "location": "/restapi/storages/#indexes", 
            "text": "", 
            "title": "Indexes"
        }, 
        {
            "location": "/restapi/storages/#requesting-the-list-of-storage-indexes", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name/indexes  workplace  - workplace name  name  - storage name  Method:  GET  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": [\n    {\n      \"Background\": false,\n      \"Bits\": 0,\n      \"BucketSize\": 0,\n      \"DefaultLanguage\": \"\",\n      \"DropDups\": false,\n      \"ExpireAfter\": 0,\n      \"Key\": [\n        \"_id\"\n      ],\n      \"LanguageOverride\": \"\",\n      \"Max\": 0,\n      \"Maxf\": 0,\n      \"Min\": 0,\n      \"Minf\": 0,\n      \"Name\": \"_id_\",\n      \"Sparse\": false,\n      \"Unique\": false,\n      \"Weights\": null\n    }\n  ]\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Requesting the list of storage indexes"
        }, 
        {
            "location": "/restapi/storages/#creating-the-index", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name/indexes  workplace  - workplace name  name  - storage name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n     name :  IndexName ,\n     key : [ -field1 , +field2 ],\n}  Response:   Success  {\n  \"result\": {\n    \"Background\": true,\n    \"Bits\": 0,\n    \"BucketSize\": 0,\n    \"DefaultLanguage\": \"\",\n    \"DropDups\": false,\n    \"ExpireAfter\": 0,\n    \"Key\": [\n      \"-field1\",\"+field2\"\n    ],\n    \"LanguageOverride\": \"\",\n    \"Max\": 0,\n    \"Maxf\": 0,\n    \"Min\": 0,\n    \"Minf\": 0,\n    \"Name\": \"IndexName\",\n    \"Sparse\": false,\n    \"Unique\": false,\n    \"Weights\": null\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating the index"
        }, 
        {
            "location": "/restapi/storages/#deleting-the-index", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name/indexes/:indexName  workplace  - workplace name  name  - storage name  indexName  - index name  Method:  DELETE  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:    Response:   Success  {\n  \"result\": true\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Deleting the index"
        }, 
        {
            "location": "/restapi/storages/#data", 
            "text": "", 
            "title": "Data"
        }, 
        {
            "location": "/restapi/storages/#retrieving-the-list-of-documents", 
            "text": "HOST:  https://api.mixapp.io  Path:  /workplaces/:workplace/storages/:name/read  workplace  - workplace name  name  - storage name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n    query: {},\n    doc: {},\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}  Response:   Success  {\n  \"result\": []\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Retrieving the list of documents"
        }, 
        {
            "location": "/restapi/storages/#creating-the-document", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name/create  workplace  - workplace name  name  - storage name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n    query: {},\n    doc: {\n         field :  data \n    },\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}  Response:   Success  {\n  \"result\": {\n    \"n\": 1,\n    \"ok\": 1\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating the document"
        }, 
        {
            "location": "/restapi/storages/#updating-the-document", 
            "text": "HOST:  https://api.mixapp.io  Path:  /workplaces/:workplace/storages/:name/update  workplace  - workplace name  name  - storage name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n    query: {\n         field :  data \n    },\n    doc: {\n         $set : {\n             field :  new string \n        }\n    },\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}  Response:   Success  {\n  \"result\": {\n    \"n\": 1,\n    \"nModified\": 1,\n    \"ok\": 1\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Updating the document"
        }, 
        {
            "location": "/restapi/storages/#counting-the-documents", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name/count  workplace  - workplace name  name  - storage name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n    query: {\n         field :  new string \n    },\n    doc: {},\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}  Response:   Success  {\n  \"result\": 1\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Counting the documents"
        }, 
        {
            "location": "/restapi/storages/#deleting-the-documents", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/storages/:name/delete  workplace  - workplace name  name  - storage name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Body:  {\n    query: {},\n    doc: {},\n    limit: 10,\n    fields: {},\n    sort: {},\n    skip: 0 \n}  Response:   Success  {\n  \"result\": {\n    \"n\": 1,\n    \"ok\": 1\n  }\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Deleting the documents"
        }, 
        {
            "location": "/restapi/connectors/", 
            "text": "Retrieving the list of available connectors\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/connectors\n\n\nworkplace\n - workplace name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\nskip=0\nlimit=100\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": [\n    {\n      \"author\": \"\",\n      \"code\": {\n        \"after\": \"\",\n        \"before\": \"\"\n      },\n      \"description\": \"\",\n      \"id\": \"58ecbfbb27218c3c9fa8b2ae\",\n      \"name\": \"Hub\",\n      \"nextConnectors\": [],\n      \"params\": {},\n      \"parentId\": \"\",\n      \"previousConnectors\": [],\n      \"type\": \"hub\"\n    }\n  ]\n}\n\n\n\n\n\n\nError\n\n\nJSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Connectors"
        }, 
        {
            "location": "/restapi/connectors/#retrieving-the-list-of-available-connectors", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/connectors  workplace  - workplace name  Method:  GET  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:  skip=0 limit=100  Body:    Response:   Success  {\n  \"result\": [\n    {\n      \"author\": \"\",\n      \"code\": {\n        \"after\": \"\",\n        \"before\": \"\"\n      },\n      \"description\": \"\",\n      \"id\": \"58ecbfbb27218c3c9fa8b2ae\",\n      \"name\": \"Hub\",\n      \"nextConnectors\": [],\n      \"params\": {},\n      \"parentId\": \"\",\n      \"previousConnectors\": [],\n      \"type\": \"hub\"\n    }\n  ]\n}    Error  JSON\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Retrieving the list of available connectors"
        }, 
        {
            "location": "/restapi/processes/", 
            "text": "List of processes\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes\n\n\nworkplace\n - workplace name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\ntitle=newprocess\nskip=0\nlimit=10\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": [\n    {\n      \"id\": \"58ecd15827218c56b6e2714c\",\n      \"title\": \"newprocess\"\n    }\n  ]\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCreating a process\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes\n\n\nworkplace\n - workplace name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{\n    \ntitle\n: \nnewprocess\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"connectors\": [\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714a\",\n        \"name\": \"Start\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"start\"\n      },\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714b\",\n        \"name\": \"Stop\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"stop\"\n      }\n    ],\n    \"id\": \"58ecd15827218c56b6e2714c\",\n    \"script\": \"\",\n    \"title\": \"newprocess\"\n  }\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nGetting a process\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"connectors\": [\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714a\",\n        \"name\": \"Start\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"start\"\n      },\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714b\",\n        \"name\": \"Stop\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"stop\"\n      }\n    ],\n    \"id\": \"58ecd15827218c56b6e2714c\",\n    \"script\": \"\",\n    \"title\": \"First process\"\n  }\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nUpdating a process\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{\n    \ntitle\n: \nNew title\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"connectors\": [\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714a\",\n        \"name\": \"Start\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"start\"\n      },\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714b\",\n        \"name\": \"Stop\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"stop\"\n      }\n    ],\n    \"id\": \"58ecd15827218c56b6e2714c\",\n    \"script\": \"\",\n    \"title\": \"New title\"      \n  }\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCloning a process\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/clone\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{\n    \ntitle\n: \nNew title\n\n}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true \n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nDeleting a process\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nStarting a process\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/start\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nStopping a process\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/stop\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{}\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nLogs\n\n\nList of logs\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/logs\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n Get\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\nskip=0\nlimit=10\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n    \"items\": [ \n        { \n            id: '5993eefd27dbd42aee872c18',\n            date: '2017-08-16T10:06:37.714+03:00',\n            type: 'log',\n            processId: '5993475435b382744c81d0da',\n            message: 'log message' \n        }\n    ],\n    \"total\": 1\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nFlush logs\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/logs\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n    result:true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nConnectors\n\n\nCreating a connector\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/connectors\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{\n    \nparentId\n: \n58ecbfbb27218c3c9fa8b2af\n,\n    \nparams\n: {\n        \ncode\n: \nreturn 1 == 1\n,\n        \nresults\n: {\n            \ntrue\n: [],\n            \nfalse\n: []\n        }\n    }\n}\n\n\n\n\n\nparentId\n - connector identifier\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"author\": \"\",\n    \"code\": {\n      \"after\": \"\",\n      \"before\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": \"58ecdeb427218c6a55dfe59f\",\n    \"name\": \"Case\",\n    \"nextConnectors\": [],\n    \"params\": {\n      \"code\": \"return 1 == 1\",\n      \"results\": {\n        \"false\": [],\n        \"true\": []\n      }\n    },\n    \"parentId\": \"58ecbfbb27218c3c9fa8b2af\",\n    \"previousConnectors\": [],\n    \"type\": \"case\"\n  }\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nUpdating a connector\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/connectors/:connector\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nconnector\n - connector identifier\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{\n    \nparentId\n: \n58ecbfbb27218c3c9fa8b2af\n,\n        \nparams\n: {\n        \ncode\n: \nreturn 12 == 12\n,\n        \nresults\n: {\n            \ntrue\n: [],\n            \nfalse\n: []\n        }\n    }\n}\n\n\n\n\n\nparentId\n - connector identifier\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": {\n    \"author\": \"\",\n    \"code\": {\n      \"after\": \"\",\n      \"before\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": \"58ecdeb427218c6a55dfe59f\",\n    \"name\": \"Case\",\n    \"nextConnectors\": [],\n    \"params\": {\n      \"code\": \"return 12 == 12\",\n      \"results\": {\n        \"false\": [],\n        \"true\": []\n      }\n    },\n    \"parentId\": \"58ecbfbb27218c3c9fa8b2af\",\n    \"previousConnectors\": [],\n    \"type\": \"case\"\n  }\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nDeleting a connector\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/connectors/:connector\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nconnector\n - connector identifier\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCreating a connection\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/connectors/:connector/relation/:target\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nconnector\n - connector identifier\n\n\ntarget\n - child connector identifier\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{}\n\n\n\n\n\nparentId\n - connector identifier\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nEstablishing the name of the connection\n\n\nThis method is used to group child connectors\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/connectors/:connector/relation/:target/:name\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nconnector\n - connector identifier\n\n\ntarget\n - child connector identifier\n\n\nname\n - name of the connection (result)\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{}\n\n\n\n\n\nparentId\n - connector identifier\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nRemoving a connection\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/workplaces/:workplace/processes/:process/connectors/:connector/relation/:target\n\n\nworkplace\n - workplace name\n\n\nprocess\n - process identifier\n\n\nconnector\n - connector identifier\n\n\ntarget\n - child connector identifier\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\nContent-Type: application/json\nX-Auth-Token: \nToken\n\n\n\n\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nparentId\n - connector identifier\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n  \"result\": true\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Processes"
        }, 
        {
            "location": "/restapi/processes/#list-of-processes", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes  workplace  - workplace name  Method:  GET  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:  title=newprocess skip=0 limit=10  Body:    Response:   Success  {\n  \"result\": [\n    {\n      \"id\": \"58ecd15827218c56b6e2714c\",\n      \"title\": \"newprocess\"\n    }\n  ]\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "List of processes"
        }, 
        {
            "location": "/restapi/processes/#creating-a-process", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes  workplace  - workplace name  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {\n     title :  newprocess \n}  Response:   Success  {\n  \"result\": {\n    \"connectors\": [\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714a\",\n        \"name\": \"Start\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"start\"\n      },\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714b\",\n        \"name\": \"Stop\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"stop\"\n      }\n    ],\n    \"id\": \"58ecd15827218c56b6e2714c\",\n    \"script\": \"\",\n    \"title\": \"newprocess\"\n  }\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating a process"
        }, 
        {
            "location": "/restapi/processes/#getting-a-process", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process  workplace  - workplace name  process  - process identifier  Method:  GET  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:    Response:   Success  {\n  \"result\": {\n    \"connectors\": [\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714a\",\n        \"name\": \"Start\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"start\"\n      },\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714b\",\n        \"name\": \"Stop\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"stop\"\n      }\n    ],\n    \"id\": \"58ecd15827218c56b6e2714c\",\n    \"script\": \"\",\n    \"title\": \"First process\"\n  }\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Getting a process"
        }, 
        {
            "location": "/restapi/processes/#updating-a-process", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process  workplace  - workplace name  process  - process identifier  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {\n     title :  New title \n}  Response:   Success  {\n  \"result\": {\n    \"connectors\": [\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714a\",\n        \"name\": \"Start\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"start\"\n      },\n      {\n        \"author\": \"\",\n        \"code\": {\n          \"after\": \"\",\n          \"before\": \"\"\n        },\n        \"description\": \"\",\n        \"id\": \"58ecd15827218c56b6e2714b\",\n        \"name\": \"Stop\",\n        \"nextConnectors\": [],\n        \"params\": {},\n        \"parentId\": \"\",\n        \"previousConnectors\": [],\n        \"type\": \"stop\"\n      }\n    ],\n    \"id\": \"58ecd15827218c56b6e2714c\",\n    \"script\": \"\",\n    \"title\": \"New title\"      \n  }\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Updating a process"
        }, 
        {
            "location": "/restapi/processes/#cloning-a-process", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/clone  workplace  - workplace name  process  - process identifier  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {\n     title :  New title \n}  Response:   Success  {\n  \"result\": true \n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Cloning a process"
        }, 
        {
            "location": "/restapi/processes/#deleting-a-process", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process  workplace  - workplace name  process  - process identifier  Method:  DELETE  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:    Response:   Success  {\n  \"result\": true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Deleting a process"
        }, 
        {
            "location": "/restapi/processes/#starting-a-process", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/start  workplace  - workplace name  process  - process identifier  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {}  Response:   Success  {\n  \"result\": true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Starting a process"
        }, 
        {
            "location": "/restapi/processes/#stopping-a-process", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/stop  workplace  - workplace name  process  - process identifier  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {}  Response:   Success  {\n  \"result\": true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Stopping a process"
        }, 
        {
            "location": "/restapi/processes/#logs", 
            "text": "", 
            "title": "Logs"
        }, 
        {
            "location": "/restapi/processes/#list-of-logs", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/logs  workplace  - workplace name  process  - process identifier  Method:  Get  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:  skip=0 limit=10  Body:    Response:   Success  {\n    \"items\": [ \n        { \n            id: '5993eefd27dbd42aee872c18',\n            date: '2017-08-16T10:06:37.714+03:00',\n            type: 'log',\n            processId: '5993475435b382744c81d0da',\n            message: 'log message' \n        }\n    ],\n    \"total\": 1\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "List of logs"
        }, 
        {
            "location": "/restapi/processes/#flush-logs", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/logs  workplace  - workplace name  process  - process identifier  Method:  DELETE  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:    Response:   Success  {\n    result:true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Flush logs"
        }, 
        {
            "location": "/restapi/processes/#connectors", 
            "text": "", 
            "title": "Connectors"
        }, 
        {
            "location": "/restapi/processes/#creating-a-connector", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/connectors  workplace  - workplace name  process  - process identifier  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {\n     parentId :  58ecbfbb27218c3c9fa8b2af ,\n     params : {\n         code :  return 1 == 1 ,\n         results : {\n             true : [],\n             false : []\n        }\n    }\n}  parentId  - connector identifier  Response:   Success  {\n  \"result\": {\n    \"author\": \"\",\n    \"code\": {\n      \"after\": \"\",\n      \"before\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": \"58ecdeb427218c6a55dfe59f\",\n    \"name\": \"Case\",\n    \"nextConnectors\": [],\n    \"params\": {\n      \"code\": \"return 1 == 1\",\n      \"results\": {\n        \"false\": [],\n        \"true\": []\n      }\n    },\n    \"parentId\": \"58ecbfbb27218c3c9fa8b2af\",\n    \"previousConnectors\": [],\n    \"type\": \"case\"\n  }\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating a connector"
        }, 
        {
            "location": "/restapi/processes/#updating-a-connector", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/connectors/:connector  workplace  - workplace name  process  - process identifier  connector  - connector identifier  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {\n     parentId :  58ecbfbb27218c3c9fa8b2af ,\n         params : {\n         code :  return 12 == 12 ,\n         results : {\n             true : [],\n             false : []\n        }\n    }\n}  parentId  - connector identifier  Response:   Success  {\n  \"result\": {\n    \"author\": \"\",\n    \"code\": {\n      \"after\": \"\",\n      \"before\": \"\"\n    },\n    \"description\": \"\",\n    \"id\": \"58ecdeb427218c6a55dfe59f\",\n    \"name\": \"Case\",\n    \"nextConnectors\": [],\n    \"params\": {\n      \"code\": \"return 12 == 12\",\n      \"results\": {\n        \"false\": [],\n        \"true\": []\n      }\n    },\n    \"parentId\": \"58ecbfbb27218c3c9fa8b2af\",\n    \"previousConnectors\": [],\n    \"type\": \"case\"\n  }\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Updating a connector"
        }, 
        {
            "location": "/restapi/processes/#deleting-a-connector", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/connectors/:connector  workplace  - workplace name  process  - process identifier  connector  - connector identifier  Method:  DELETE  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:    Response:   Success  {\n  \"result\": true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Deleting a connector"
        }, 
        {
            "location": "/restapi/processes/#creating-a-connection", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/connectors/:connector/relation/:target  workplace  - workplace name  process  - process identifier  connector  - connector identifier  target  - child connector identifier  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {}  parentId  - connector identifier  Response:   Success  {\n  \"result\": true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating a connection"
        }, 
        {
            "location": "/restapi/processes/#establishing-the-name-of-the-connection", 
            "text": "This method is used to group child connectors  HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/connectors/:connector/relation/:target/:name  workplace  - workplace name  process  - process identifier  connector  - connector identifier  target  - child connector identifier  name  - name of the connection (result)  Method:  POST  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:  {}  parentId  - connector identifier  Response:   Success  {\n  \"result\": true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Establishing the name of the connection"
        }, 
        {
            "location": "/restapi/processes/#removing-a-connection", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/workplaces/:workplace/processes/:process/connectors/:connector/relation/:target  workplace  - workplace name  process  - process identifier  connector  - connector identifier  target  - child connector identifier  Method:  DELETE  Headers:  Content-Type: application/json\nX-Auth-Token:  Token   Query:    Body:    parentId  - connector identifier  Response:   Success  {\n  \"result\": true\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Removing a connection"
        }, 
        {
            "location": "/restapi/oidc/", 
            "text": "List of oidc clients\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/oidc/:workplace/registration\n\n\nworkplace\n - workplace name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\n    Content-Type: application/json\n    Authorization: Bearer \nOIDC_TOKEN\n\n\n\n\n\n\nOIDCTOKEN\n - Secret token from oidc settings workplace\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n[\n    {\n        \"client_id\": \"59dd29d8574e741c966c73f0\",\n        \"application_type\": \"native\",\n        \"response_types\": [\"code\"],\n        \"scopes\": [],\n        \"client_secret\": \"\nsecret_string\n\",\n        \"redirect_uris\": [\n            \"http://localhost:8080\",\n            \"http://localhost:8081\"\n        ],\n        \"post_logout_redirect_uris\": [\n            \"http://localhost:8082\"\n        ],\n        \"client_secret_expires_at\": 0,            \n        \"client_name\": \"\",\n        \"contacts\": [],\n        \"logo_uri\": \"\",\n        \"client_uri\": \"\",\n        \"tos_uri\": \"\",\n        \"policy_uri\": \"\"\n    }\n]\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nGetting oidc client\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/oidc/:workplace/registration\n\n\nworkplace\n - workplace name\n\n\nMethod:\n GET\n\n\nHeaders:\n\n\n    Authorization: Bearer \nOIDC_TOKEN\n\n\n\n\n\n\nOIDCTOKEN\n - Secret token from oidc settings workplace\n\n\nQuery:\n\n\nclient_id=\nclient_id\n\n\n\n\n\n\nclient_id\n - Id of oidc client\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n    \"client_id\": \"59dd29d8574e741c966c73f0\",\n    \"application_type\": \"native\",\n    \"response_types\": [\"code\"],\n    \"scopes\": [],\n    \"client_secret\": \"\nsecret_string\n\",\n    \"redirect_uris\": [\n        \"http://localhost:8080\",\n        \"http://localhost:8081\"\n    ],\n    \"post_logout_redirect_uris\": [\n        \"http://localhost:8082\"\n    ],\n    \"client_secret_expires_at\": 0,\n    \"client_name\": \"\",\n    \"contacts\": [],\n    \"logo_uri\": \"\",\n    \"client_uri\": \"\",\n    \"tos_uri\": \"\",\n    \"policy_uri\": \"\"\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nCreating oidc client\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/oidc/:workplace/registration\n\n\nworkplace\n - workplace name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\n    Content-Type: application/json\n    Authorization: Bearer \nOIDC_TOKEN\n\n\n\n\n\n\nOIDCTOKEN\n - Secret token from oidc settings workplace\n\n\nQuery:\n\n\n\n\n\n\n\n\nBody:\n\n\n{        \n        \napplication_type\n: \nnative\n,\n        \nresponse_types\n: [\ncode\n],\n        \nscopes\n: [\n            {\n                \nname\n: \nroles\n,\n                \ndesc\n: \nUser roles\n,\n                \nfields\n: [\nroles\n]\n            }\n        ],\n        \nredirect_uris\n: [\n            \nhttp://localhost:8080\n,\n            \nhttp://localhost:8081\n\n        ],\n        \npost_logout_redirect_uris\n: [\n            \nhttp://localhost:8082\n\n        ],\n        \nclient_secret_expires_at\n: 0,\n        \nclient_name\n: \n,\n        \ncontacts\n: [],\n        \nlogo_uri\n: \n,\n        \nclient_uri\n: \n,\n        \ntos_uri\n: \n,\n        \npolicy_uri\n: \n\n    }\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{\n    \"client_id\": \"59dd29d8574e741c966c73f0\",\n    \"application_type\": \"native\",\n    \"response_types\": [\"code\"],\n    \"scopes\": [\n                  {\n                      \"name\": \"roles\",\n                      \"desc\": \"User roles\",\n                      \"fields\": [\"roles\"]\n                  }\n              ],\n    \"client_secret\": \"\nsecret_string\n\",\n    \"redirect_uris\": [\n        \"http://localhost:8080\",\n        \"http://localhost:8081\"\n    ],\n    \"post_logout_redirect_uris\": [\n        \"http://localhost:8082\"\n    ],\n    \"client_secret_expires_at\": 0,\n    \"client_name\": \"\",\n    \"contacts\": [],\n    \"logo_uri\": \"\",\n    \"client_uri\": \"\",\n    \"tos_uri\": \"\",\n    \"policy_uri\": \"\"\n}\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nUpdating oidc client\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/oidc/:workplace/registration\n\n\nworkplace\n - workplace name\n\n\nMethod:\n POST\n\n\nHeaders:\n\n\n    Content-Type: application/json\n    Authorization: Bearer \nOIDC_TOKEN\n\n\n\n\n\n\nOIDCTOKEN\n - Secret token from oidc settings workplace\n\n\nQuery:\n\n\nclient_id=\nclient_id\n\n\n\n\n\n\nclient_id\n - Id of oidc client\n\n\nBody:\n\n\n{        \n    \napplication_type\n: \nnative\n,\n    \nresponse_types\n: [\ncode\n],\n    \nscopes\n: [\n        {\n            \nname\n: \nroles\n,\n            \ndesc\n: \nUser roles\n,\n            \nfields\n: [\nroles\n]\n        }\n    ],\n    \nredirect_uris\n: [\n        \nhttp://localhost:8080\n\n    ],\n    \npost_logout_redirect_uris\n: [\n        \nhttp://localhost:8082\n\n    ],\n    \nclient_secret_expires_at\n: 0,\n    \nclient_name\n: \n,\n    \ncontacts\n: [],\n    \nlogo_uri\n: \n,\n    \nclient_uri\n: \n,\n    \ntos_uri\n: \n,\n    \npolicy_uri\n: \n,\n    \ngenerate_token\n: false\n}\n\n\n\n\n\ngenerate_token\n - if set to true, will be generate a new secret key\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{        \n        \"application_type\": \"native\",\n        \"response_types\": [\"code\"],\n        \"scopes\": [\n            {\n                \"name\": \"roles\",\n                \"desc\": \"User roles\",\n                \"fields\": [\"roles\"]\n            }\n        ],\n        \"redirect_uris\": [\n            \"http://localhost:8080\"\n        ],\n        \"post_logout_redirect_uris\": [\n            \"http://localhost:8082\"\n        ],\n        \"client_secret_expires_at\": 0,\n        \"client_name\": \"\",\n        \"contacts\": [],\n        \"logo_uri\": \"\",\n        \"client_uri\": \"\",\n        \"tos_uri\": \"\",\n        \"policy_uri\": \"\"\n    }\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}\n\n\n\n\nRemoving oidc client\n\n\nHOST:\n https://api.mixapp.io\n\n\nPath:\n /v1/oidc/:workplace/registration\n\n\nworkplace\n - workplace name\n\n\nMethod:\n DELETE\n\n\nHeaders:\n\n\n    Content-Type: application/json\n    Authorization: Bearer \nOIDC_TOKEN\n\n\n\n\n\n\nOIDCTOKEN\n - Secret token from oidc settings workplace\n\n\nQuery:\n\n\nclient_id=\nclient_id\n\n\n\n\n\n\nclient_id\n - Id of oidc client\n\n\nBody:\n\n\n\n\n\n\n\n\nResponse:\n\n\n\n\nSuccess\n\n\n{        \n        result: true\n    }\n\n\n\n\n\n\nError\n\n\n{\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Openid Connect"
        }, 
        {
            "location": "/restapi/oidc/#list-of-oidc-clients", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/oidc/:workplace/registration  workplace  - workplace name  Method:  GET  Headers:      Content-Type: application/json\n    Authorization: Bearer  OIDC_TOKEN   OIDCTOKEN  - Secret token from oidc settings workplace  Query:    Body:    Response:   Success  [\n    {\n        \"client_id\": \"59dd29d8574e741c966c73f0\",\n        \"application_type\": \"native\",\n        \"response_types\": [\"code\"],\n        \"scopes\": [],\n        \"client_secret\": \" secret_string \",\n        \"redirect_uris\": [\n            \"http://localhost:8080\",\n            \"http://localhost:8081\"\n        ],\n        \"post_logout_redirect_uris\": [\n            \"http://localhost:8082\"\n        ],\n        \"client_secret_expires_at\": 0,            \n        \"client_name\": \"\",\n        \"contacts\": [],\n        \"logo_uri\": \"\",\n        \"client_uri\": \"\",\n        \"tos_uri\": \"\",\n        \"policy_uri\": \"\"\n    }\n]    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "List of oidc clients"
        }, 
        {
            "location": "/restapi/oidc/#getting-oidc-client", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/oidc/:workplace/registration  workplace  - workplace name  Method:  GET  Headers:      Authorization: Bearer  OIDC_TOKEN   OIDCTOKEN  - Secret token from oidc settings workplace  Query:  client_id= client_id   client_id  - Id of oidc client  Body:    Response:   Success  {\n    \"client_id\": \"59dd29d8574e741c966c73f0\",\n    \"application_type\": \"native\",\n    \"response_types\": [\"code\"],\n    \"scopes\": [],\n    \"client_secret\": \" secret_string \",\n    \"redirect_uris\": [\n        \"http://localhost:8080\",\n        \"http://localhost:8081\"\n    ],\n    \"post_logout_redirect_uris\": [\n        \"http://localhost:8082\"\n    ],\n    \"client_secret_expires_at\": 0,\n    \"client_name\": \"\",\n    \"contacts\": [],\n    \"logo_uri\": \"\",\n    \"client_uri\": \"\",\n    \"tos_uri\": \"\",\n    \"policy_uri\": \"\"\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Getting oidc client"
        }, 
        {
            "location": "/restapi/oidc/#creating-oidc-client", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/oidc/:workplace/registration  workplace  - workplace name  Method:  POST  Headers:      Content-Type: application/json\n    Authorization: Bearer  OIDC_TOKEN   OIDCTOKEN  - Secret token from oidc settings workplace  Query:    Body:  {        \n         application_type :  native ,\n         response_types : [ code ],\n         scopes : [\n            {\n                 name :  roles ,\n                 desc :  User roles ,\n                 fields : [ roles ]\n            }\n        ],\n         redirect_uris : [\n             http://localhost:8080 ,\n             http://localhost:8081 \n        ],\n         post_logout_redirect_uris : [\n             http://localhost:8082 \n        ],\n         client_secret_expires_at : 0,\n         client_name :  ,\n         contacts : [],\n         logo_uri :  ,\n         client_uri :  ,\n         tos_uri :  ,\n         policy_uri :  \n    }  Response:   Success  {\n    \"client_id\": \"59dd29d8574e741c966c73f0\",\n    \"application_type\": \"native\",\n    \"response_types\": [\"code\"],\n    \"scopes\": [\n                  {\n                      \"name\": \"roles\",\n                      \"desc\": \"User roles\",\n                      \"fields\": [\"roles\"]\n                  }\n              ],\n    \"client_secret\": \" secret_string \",\n    \"redirect_uris\": [\n        \"http://localhost:8080\",\n        \"http://localhost:8081\"\n    ],\n    \"post_logout_redirect_uris\": [\n        \"http://localhost:8082\"\n    ],\n    \"client_secret_expires_at\": 0,\n    \"client_name\": \"\",\n    \"contacts\": [],\n    \"logo_uri\": \"\",\n    \"client_uri\": \"\",\n    \"tos_uri\": \"\",\n    \"policy_uri\": \"\"\n}    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Creating oidc client"
        }, 
        {
            "location": "/restapi/oidc/#updating-oidc-client", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/oidc/:workplace/registration  workplace  - workplace name  Method:  POST  Headers:      Content-Type: application/json\n    Authorization: Bearer  OIDC_TOKEN   OIDCTOKEN  - Secret token from oidc settings workplace  Query:  client_id= client_id   client_id  - Id of oidc client  Body:  {        \n     application_type :  native ,\n     response_types : [ code ],\n     scopes : [\n        {\n             name :  roles ,\n             desc :  User roles ,\n             fields : [ roles ]\n        }\n    ],\n     redirect_uris : [\n         http://localhost:8080 \n    ],\n     post_logout_redirect_uris : [\n         http://localhost:8082 \n    ],\n     client_secret_expires_at : 0,\n     client_name :  ,\n     contacts : [],\n     logo_uri :  ,\n     client_uri :  ,\n     tos_uri :  ,\n     policy_uri :  ,\n     generate_token : false\n}  generate_token  - if set to true, will be generate a new secret key  Response:   Success  {        \n        \"application_type\": \"native\",\n        \"response_types\": [\"code\"],\n        \"scopes\": [\n            {\n                \"name\": \"roles\",\n                \"desc\": \"User roles\",\n                \"fields\": [\"roles\"]\n            }\n        ],\n        \"redirect_uris\": [\n            \"http://localhost:8080\"\n        ],\n        \"post_logout_redirect_uris\": [\n            \"http://localhost:8082\"\n        ],\n        \"client_secret_expires_at\": 0,\n        \"client_name\": \"\",\n        \"contacts\": [],\n        \"logo_uri\": \"\",\n        \"client_uri\": \"\",\n        \"tos_uri\": \"\",\n        \"policy_uri\": \"\"\n    }    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Updating oidc client"
        }, 
        {
            "location": "/restapi/oidc/#removing-oidc-client", 
            "text": "HOST:  https://api.mixapp.io  Path:  /v1/oidc/:workplace/registration  workplace  - workplace name  Method:  DELETE  Headers:      Content-Type: application/json\n    Authorization: Bearer  OIDC_TOKEN   OIDCTOKEN  - Secret token from oidc settings workplace  Query:  client_id= client_id   client_id  - Id of oidc client  Body:    Response:   Success  {        \n        result: true\n    }    Error  {\n    error_code: int,\n    error_message: string,\n    more_info: \"\"\n}", 
            "title": "Removing oidc client"
        }, 
        {
            "location": "/sdk/js/", 
            "text": "Instalation\n\n\nFor NodeJS\n\n\nInstall module\n\n\nnpm install mixapp --save\n\n\n\n\n\nAnd run it in your project\n\n\nconst Mixapp = require(\nmixapp\n);\n\n\n\n\n\nFor browser\n\n\nDownload the library \nlib/browser/mixapp.min.js\n and run it in the project:\n\n\nscript src=\njs/mixapp.min.js\n/script\n\n\n\n\n\n\nSDK Functions\n\n\nMixapp.Service([options])\n\n\nCreates a new service object.\n\n\nconst service = new Mixapp.Service([options])\n\n\n\n\n\nThe optional options parameter specifies the behavior of the service.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nString\n\n\nUsed to initialize the service with an existing session\n\n\n\n\n\n\ntimeout\n\n\nInteger\n\n\nUsed to install timeout http requests", 
            "title": "Get Started"
        }, 
        {
            "location": "/sdk/js/#instalation", 
            "text": "For NodeJS  Install module  npm install mixapp --save  And run it in your project  const Mixapp = require( mixapp );  For browser  Download the library  lib/browser/mixapp.min.js  and run it in the project:  script src= js/mixapp.min.js /script", 
            "title": "Instalation"
        }, 
        {
            "location": "/sdk/js/#sdk-functions", 
            "text": "", 
            "title": "SDK Functions"
        }, 
        {
            "location": "/sdk/js/#mixappserviceoptions", 
            "text": "Creates a new service object.  const service = new Mixapp.Service([options])  The optional options parameter specifies the behavior of the service.     Name  Type  Description      token  String  Used to initialize the service with an existing session    timeout  Integer  Used to install timeout http requests", 
            "title": "Mixapp.Service([options])"
        }, 
        {
            "location": "/sdk/js/service/", 
            "text": "signIn(email, password)\n\n\nAuthorizing in the system, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nsignIn\n(\nuser@domain.com\n,\n \npassword\n)\n\n    \n.\nthen\n(\nres\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nemail\n\n\nString\n\n\n---\n\n\n\n\n\n\npassword\n\n\nString\n\n\n---\n\n\n\n\n\n\n\n\nsignUp(data)\n\n\nRegistering in the system, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nsignUp\n({\n\n    \nemail\n:\n \nuser@domain.com\n,\n\n    \nname\n:\n \nusername\n\n\n})\n\n    \n.\nthen\n(\nres\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains data about the user.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nemail\n\n\nString\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d\n\n\n\n\n\n\n\n\nupdate(data)\n\n\nUpdates user information, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nupdate\n({\n\n    \nname\n:\n \nusername\n,\n\n    \npassword\n:\n \nnewpassword\n,\n\n    \navatar\n:\n \n\n\n})\n\n    \n.\nthen\n(\nres\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains user data that has to be updated.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n---\n\n\n\n\n\n\npassword\n\n\nString\n\n\nIf an empty value is submitted, the password will not be reset\n\n\n\n\n\n\navatar\n\n\nString\n\n\nAn base64 image has to be submitted\n\n\n\n\n\n\n\n\nrestore(email)\n\n\nSystem password reset request, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nrestore\n(\nuser@domain.com\n)\n\n    \n.\nthen\n(\nres\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nemail\n\n\nString\n\n\nUser e-mail in the system\n\n\n\n\n\n\n\n\nconfirmRestore(token, pass)\n\n\nRequest for password reset at access recovery, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nconfirmRestore\n(\ntoken\n,\n \nnewpass\n)\n\n    \n.\nthen\n(\nres\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nString\n\n\nToken previously e-mailed\n\n\n\n\n\n\npassword\n\n\nString\n\n\nNew password\n\n\n\n\n\n\n\n\nworkplaces.get(name)\n\n\nRequesting and creating Workplace class instance, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nmyworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nWorkplace name\n\n\n\n\n\n\n\n\nworkplaces.create(data)\n\n\nCreates a new workplace, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\ncreate\n({\n\n    \nname\n:\n \nnewworkplace\n\n\n})\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains information about the workplace created.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nWorkplace name", 
            "title": "Service"
        }, 
        {
            "location": "/sdk/js/service/#signinemail-password", 
            "text": "Authorizing in the system, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . signIn ( user@domain.com ,   password ) \n     . then ( res   =   {}) \n     . catch ( err   =   {})      Name  Type  Description      email  String  ---    password  String  ---", 
            "title": "signIn(email, password)"
        }, 
        {
            "location": "/sdk/js/service/#signupdata", 
            "text": "Registering in the system, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . signUp ({ \n     email :   user@domain.com , \n     name :   username  }) \n     . then ( res   =   {}) \n     . catch ( err   =   {})   Data parameter contains data about the user.     Name  Type  Description      email  String  \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d    name  String  \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u0435\u043d", 
            "title": "signUp(data)"
        }, 
        {
            "location": "/sdk/js/service/#updatedata", 
            "text": "Updates user information, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . update ({ \n     name :   username , \n     password :   newpassword , \n     avatar :    }) \n     . then ( res   =   {}) \n     . catch ( err   =   {})   Data parameter contains user data that has to be updated.     Name  Type  Description      name  String  ---    password  String  If an empty value is submitted, the password will not be reset    avatar  String  An base64 image has to be submitted", 
            "title": "update(data)"
        }, 
        {
            "location": "/sdk/js/service/#restoreemail", 
            "text": "System password reset request, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . restore ( user@domain.com ) \n     . then ( res   =   {}) \n     . catch ( err   =   {})      Name  Type  Description      email  String  User e-mail in the system", 
            "title": "restore(email)"
        }, 
        {
            "location": "/sdk/js/service/#confirmrestoretoken-pass", 
            "text": "Request for password reset at access recovery, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . confirmRestore ( token ,   newpass ) \n     . then ( res   =   {}) \n     . catch ( err   =   {})      Name  Type  Description      token  String  Token previously e-mailed    password  String  New password", 
            "title": "confirmRestore(token, pass)"
        }, 
        {
            "location": "/sdk/js/service/#workplacesgetname", 
            "text": "Requesting and creating Workplace class instance, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( myworkplace ) \n     . then ( workplace   =   {}) \n     . catch ( err   =   {})      Name  Type  Description      name  String  Workplace name", 
            "title": "workplaces.get(name)"
        }, 
        {
            "location": "/sdk/js/service/#workplacescreatedata", 
            "text": "Creates a new workplace, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . create ({ \n     name :   newworkplace  }) \n     . then ( workplace   =   {}) \n     . catch ( err   =   {})   Data parameter contains information about the workplace created.     Name  Type  Description      name  String  Workplace name", 
            "title": "workplaces.create(data)"
        }, 
        {
            "location": "/sdk/js/workspace/", 
            "text": "fetch()\n\n\nUpdates local class, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nfetch\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nupdate(data)\n\n\nUpdates workplace settings, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nupdate\n({\n\n            \nnpm\n:\n \n[\nlodash\n]\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains workplace settings being updated.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nnpm\n\n\nString\n\n\nArray of supported NPM modules\n\n\n\n\n\n\n\n\nremove()\n\n\nDeletes the workplace, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nremove\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nsettings.oidc.get()\n\n\nGets oidc settings, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nsettings\n.\noidc\n.\nget\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nsettings.oidc.update()\n\n\nUpdates oidc settings, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nsettings\n.\noidc\n.\nupdate\n({\ncollection\n:\n \nnew_name\n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nsettings.oidc.refreshToken()\n\n\nRefreshes oidc token, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nsettings\n.\noidc\n.\nrefreshToken\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nstorages.getAll()\n\n\nRetrieves the list of available storages, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\ngetAll\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nstorages.create(data)\n\n\nCreates a new storage, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\ncreate\n({\n\n            \nname\n:\n \nnewstorage\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains information on the storage created.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u0418\u043c\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\n\n\n\n\n\n\n\n\nstorages.get(name)\n\n\nRetrieves storage class instance, function returns Promise. \n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nnewstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\n\u0418\u043c\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\n\n\n\n\n\n\n\n\nprocesses.search(filter)\n\n\nRetrieves list of processes, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocesses\n.\nsearch\n({\n\n            \nskip\n:\n \n0\n,\n\n            \nlimit\n:\n \n10\n,\n\n            \ntitle\n:\n \nMy process\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nFilter parameter contains process selection settings.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nskip\n\n\nString\n\n\nSkips over the specified number of processes\n\n\n\n\n\n\nlimit\n\n\nString\n\n\nLimits the number of processes passed\n\n\n\n\n\n\ntitle\n\n\nString\n\n\nNot obligatory\n\n\n\n\n\n\n\n\nprocesses.get(id)\n\n\nRetrieves process class instance, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocesses\n.\nget\n(\nid\n)\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\nProcess identifier\n\n\n\n\n\n\n\n\nprocesses.create(data)\n\n\nCreates a new process, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocesses\n.\ncreate\n({\n\n            \ntitle\n:\n \nProcess\n\n        \n})\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains data of the process created.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntitle\n\n\nString\n\n\nProcess name\n\n\n\n\n\n\n\n\ngetConnectors()\n\n\nRetrieves list of available connector in the system, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\ngetConnectors\n()\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\noidc.getClients(token)\n\n\nGets list of oidc logs, function returns Promise.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nString\n\n\nSecret token from oidc settings workplace\n\n\n\n\n\n\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\noidc\n.\ngetClients\n(\ntoken\n);\n\n    \n})\n  \n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\noidc.getClient(token, id)\n\n\nGets oidc client, function returns Promise.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nString\n\n\nSecret token from oidc settings workplace\n\n\n\n\n\n\nid\n\n\nString\n\n\nClient id\n\n\n\n\n\n\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\ngetClient\n(\ntoken\n,\n \nid\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\noidc.updateClient(token, id, data)\n\n\nUpdates oidc client, function returns Promise.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nString\n\n\nSecret token from oidc settings workplace\n\n\n\n\n\n\nid\n\n\nString\n\n\nClient id\n\n\n\n\n\n\ndata\n\n\nString\n\n\nClient data\n\n\n\n\n\n\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\noidc\n.\nupdateClient\n(\ntoken\n,\n \nid\n,\n \ndata\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\noidc.createClient(token, id, data)\n\n\nCreates oidc client, function returns Promise.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nString\n\n\nSecret token from oidc settings workplace\n\n\n\n\n\n\nid\n\n\nString\n\n\nClient id\n\n\n\n\n\n\ndata\n\n\nString\n\n\nClient data\n\n\n\n\n\n\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\noidc\n.\ncreateClient\n(\ntoken\n,\n \ndata\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\noidc.removeClient(token, id)\n\n\nRemoves oidc client, function returns Promise.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntoken\n\n\nString\n\n\nSecret token from oidc settings workplace\n\n\n\n\n\n\nid\n\n\nString\n\n\nClient id\n\n\n\n\n\n\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\noidc\n.\nremoveClient\n(\ntoken\n,\n \nid\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})", 
            "title": "Workspace"
        }, 
        {
            "location": "/sdk/js/workspace/#fetch", 
            "text": "Updates local class, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . fetch (); \n     }) \n     . catch ( err   =   {})", 
            "title": "fetch()"
        }, 
        {
            "location": "/sdk/js/workspace/#updatedata", 
            "text": "Updates workplace settings, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . update ({ \n             npm :   [ lodash ] \n         }); \n     }) \n     . catch ( err   =   {})   Data parameter contains workplace settings being updated.     Name  Type  Description      npm  String  Array of supported NPM modules", 
            "title": "update(data)"
        }, 
        {
            "location": "/sdk/js/workspace/#remove", 
            "text": "Deletes the workplace, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . remove (); \n     }) \n     . catch ( err   =   {})", 
            "title": "remove()"
        }, 
        {
            "location": "/sdk/js/workspace/#settingsoidcget", 
            "text": "Gets oidc settings, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . settings . oidc . get (); \n     }) \n     . catch ( err   =   {})", 
            "title": "settings.oidc.get()"
        }, 
        {
            "location": "/sdk/js/workspace/#settingsoidcupdate", 
            "text": "Updates oidc settings, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . settings . oidc . update ({ collection :   new_name }); \n     }) \n     . catch ( err   =   {})", 
            "title": "settings.oidc.update()"
        }, 
        {
            "location": "/sdk/js/workspace/#settingsoidcrefreshtoken", 
            "text": "Refreshes oidc token, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . settings . oidc . refreshToken (); \n     }) \n     . catch ( err   =   {})", 
            "title": "settings.oidc.refreshToken()"
        }, 
        {
            "location": "/sdk/js/workspace/#storagesgetall", 
            "text": "Retrieves the list of available storages, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . getAll (); \n     }) \n     . catch ( err   =   {})", 
            "title": "storages.getAll()"
        }, 
        {
            "location": "/sdk/js/workspace/#storagescreatedata", 
            "text": "Creates a new storage, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . create ({ \n             name :   newstorage \n         }); \n     }) \n     . catch ( err   =   {})   Data parameter contains information on the storage created.     Name  Type  Description      name  String  \u0418\u043c\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430", 
            "title": "storages.create(data)"
        }, 
        {
            "location": "/sdk/js/workspace/#storagesgetname", 
            "text": "Retrieves storage class instance, function returns Promise.   const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( newstorage ); \n     }) \n     . then ( storage   =   {}) \n     . catch ( err   =   {})      Name  Type  Description      name  String  \u0418\u043c\u044f \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430", 
            "title": "storages.get(name)"
        }, 
        {
            "location": "/sdk/js/workspace/#processessearchfilter", 
            "text": "Retrieves list of processes, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . processes . search ({ \n             skip :   0 , \n             limit :   10 , \n             title :   My process \n         }); \n     }) \n     . catch ( err   =   {})   Filter parameter contains process selection settings.     Name  Type  Description      skip  String  Skips over the specified number of processes    limit  String  Limits the number of processes passed    title  String  Not obligatory", 
            "title": "processes.search(filter)"
        }, 
        {
            "location": "/sdk/js/workspace/#processesgetid", 
            "text": "Retrieves process class instance, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . processes . get ( id ) \n     }) \n     . catch ( err   =   {})      Name  Type  Description      id  String  Process identifier", 
            "title": "processes.get(id)"
        }, 
        {
            "location": "/sdk/js/workspace/#processescreatedata", 
            "text": "Creates a new process, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . processes . create ({ \n             title :   Process \n         }) \n     }) \n     . catch ( err   =   {})   Data parameter contains data of the process created.     Name  Type  Description      title  String  Process name", 
            "title": "processes.create(data)"
        }, 
        {
            "location": "/sdk/js/workspace/#getconnectors", 
            "text": "Retrieves list of available connector in the system, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . getConnectors () \n     }) \n     . catch ( err   =   {})", 
            "title": "getConnectors()"
        }, 
        {
            "location": "/sdk/js/workspace/#oidcgetclientstoken", 
            "text": "Gets list of oidc logs, function returns Promise.     Name  Type  Description      token  String  Secret token from oidc settings workplace     const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . oidc . getClients ( token ); \n     })   \n     . catch ( err   =   {})", 
            "title": "oidc.getClients(token)"
        }, 
        {
            "location": "/sdk/js/workspace/#oidcgetclienttoken-id", 
            "text": "Gets oidc client, function returns Promise.     Name  Type  Description      token  String  Secret token from oidc settings workplace    id  String  Client id     const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . getClient ( token ,   id ); \n     }) \n     . catch ( err   =   {})", 
            "title": "oidc.getClient(token, id)"
        }, 
        {
            "location": "/sdk/js/workspace/#oidcupdateclienttoken-id-data", 
            "text": "Updates oidc client, function returns Promise.     Name  Type  Description      token  String  Secret token from oidc settings workplace    id  String  Client id    data  String  Client data     const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . oidc . updateClient ( token ,   id ,   data ); \n     }) \n     . catch ( err   =   {})", 
            "title": "oidc.updateClient(token, id, data)"
        }, 
        {
            "location": "/sdk/js/workspace/#oidccreateclienttoken-id-data", 
            "text": "Creates oidc client, function returns Promise.     Name  Type  Description      token  String  Secret token from oidc settings workplace    id  String  Client id    data  String  Client data     const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . oidc . createClient ( token ,   data ); \n     }) \n     . catch ( err   =   {})", 
            "title": "oidc.createClient(token, id, data)"
        }, 
        {
            "location": "/sdk/js/workspace/#oidcremoveclienttoken-id", 
            "text": "Removes oidc client, function returns Promise.     Name  Type  Description      token  String  Secret token from oidc settings workplace    id  String  Client id     const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . oidc . removeClient ( token ,   id ); \n     }) \n     . catch ( err   =   {})", 
            "title": "oidc.removeClient(token, id)"
        }, 
        {
            "location": "/sdk/js/storage/", 
            "text": "fetch()\n\n\nUpdates local class, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\nfetch\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nupdate(data)\n\n\nUpdates storage settings, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\nupdate\n({});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains storage settings that are being updated.\n\n\n\n\nPlease\n\n\n\n\nnote\n   This method has been created to update settings that will be available in the next version.\n\n\nremove()\n\n\nDeletes the storage, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\nremove\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\ngetIndexes()\n\n\nRetrieves list of storage indexes, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\ngetIndexes\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\ncreateIndex(index)\n\n\nCreates an index, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\ncreateIndex\n({\n\n            \nname\n:\n \nmyindex\n,\n\n            \nkey\n:\n \n[\n-field1\n],\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nIndex parameter contains parameters of the index created.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nIndex name\n\n\n\n\n\n\nkey\n\n\nArray\n\n\nNames of fields being indexed (array)\n\n\n\n\n\n\n\n\nremoveIndex(name)\n\n\nDeletes the index, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\nremoveIndex\n(\nmyindex\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nname\n\n\nString\n\n\nName of the index\n\n\n\n\n\n\n\n\ngetDocuments(protocol)\n\n\nRetrieves list of documents, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\ngetDocuments\n({});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprotocol\n\n\nObject\n\n\n\u0441\u043c. \nStorage protocol\n\n\n\n\n\n\n\n\ncreateDocument(protocol)\n\n\nCreates a document, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\ncreateDocument\n({});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprotocol\n\n\nObject\n\n\n\u0441\u043c. \nStorage protocol\n\n\n\n\n\n\n\n\nupdateDocuments(protocol)\n\n\nUpdates documents, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\nupdateDocuments\n({});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprotocol\n\n\nObject\n\n\n\u0441\u043c. \nStorage protocol\n\n\n\n\n\n\n\n\nremoveDocuments(protocol)\n\n\nDeletes documents, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\nremoveDocuments\n({});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprotocol\n\n\nObject\n\n\n\u0441\u043c. \nStorage protocol\n\n\n\n\n\n\n\n\ncountDocuments(protocol)\n\n\nRequests number of documents, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nstorages\n.\nget\n(\nstorage\n);\n\n    \n})\n\n    \n.\nthen\n(\nstorage\n \n=\n \n{\n\n        \nreturn\n \nstorage\n.\ncountDocuments\n({});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nprotocol\n\n\nObject\n\n\n\u0441\u043c. \nStorage protocol", 
            "title": "Storage"
        }, 
        {
            "location": "/sdk/js/storage/#fetch", 
            "text": "Updates local class, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . fetch (); \n     }) \n     . catch ( err   =   {})", 
            "title": "fetch()"
        }, 
        {
            "location": "/sdk/js/storage/#updatedata", 
            "text": "Updates storage settings, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . update ({}); \n     }) \n     . catch ( err   =   {})   Data parameter contains storage settings that are being updated.   Please   note\n   This method has been created to update settings that will be available in the next version.", 
            "title": "update(data)"
        }, 
        {
            "location": "/sdk/js/storage/#remove", 
            "text": "Deletes the storage, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . remove (); \n     }) \n     . catch ( err   =   {})", 
            "title": "remove()"
        }, 
        {
            "location": "/sdk/js/storage/#getindexes", 
            "text": "Retrieves list of storage indexes, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . getIndexes (); \n     }) \n     . catch ( err   =   {})", 
            "title": "getIndexes()"
        }, 
        {
            "location": "/sdk/js/storage/#createindexindex", 
            "text": "Creates an index, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . createIndex ({ \n             name :   myindex , \n             key :   [ -field1 ], \n         }); \n     }) \n     . catch ( err   =   {})   Index parameter contains parameters of the index created.     Name  Type  Description      name  String  Index name    key  Array  Names of fields being indexed (array)", 
            "title": "createIndex(index)"
        }, 
        {
            "location": "/sdk/js/storage/#removeindexname", 
            "text": "Deletes the index, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . removeIndex ( myindex ); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      name  String  Name of the index", 
            "title": "removeIndex(name)"
        }, 
        {
            "location": "/sdk/js/storage/#getdocumentsprotocol", 
            "text": "Retrieves list of documents, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . getDocuments ({}); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      protocol  Object  \u0441\u043c.  Storage protocol", 
            "title": "getDocuments(protocol)"
        }, 
        {
            "location": "/sdk/js/storage/#createdocumentprotocol", 
            "text": "Creates a document, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . createDocument ({}); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      protocol  Object  \u0441\u043c.  Storage protocol", 
            "title": "createDocument(protocol)"
        }, 
        {
            "location": "/sdk/js/storage/#updatedocumentsprotocol", 
            "text": "Updates documents, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . updateDocuments ({}); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      protocol  Object  \u0441\u043c.  Storage protocol", 
            "title": "updateDocuments(protocol)"
        }, 
        {
            "location": "/sdk/js/storage/#removedocumentsprotocol", 
            "text": "Deletes documents, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . removeDocuments ({}); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      protocol  Object  \u0441\u043c.  Storage protocol", 
            "title": "removeDocuments(protocol)"
        }, 
        {
            "location": "/sdk/js/storage/#countdocumentsprotocol", 
            "text": "Requests number of documents, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . storages . get ( storage ); \n     }) \n     . then ( storage   =   { \n         return   storage . countDocuments ({}); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      protocol  Object  \u0441\u043c.  Storage protocol", 
            "title": "countDocuments(protocol)"
        }, 
        {
            "location": "/sdk/js/process/", 
            "text": "fetch()\n\n\nUpdates local class, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nfetch\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nupdate(data)\n\n\nUpdates the process, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nupdate\n({\n\n            \ntitle\n:\n \nNew Process\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains the updated parameters of the process.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ntitle\n\n\nString\n\n\nProcess name\n\n\n\n\n\n\n\n\nclone(data)\n\n\nClones a process, function returns Promise.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ndata.title\n\n\nString\n\n\nProcess name\n\n\n\n\n\n\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nclone\n({\n\n            \ntitle\n:\n \nNew title\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nremove()\n\n\nDeletes the process, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nremove\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nstart()\n\n\nStarts the process, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nstart\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nstop()\n\n\nStops the process, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nstop\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nList logs()\n\n\nGets list of logs, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\ngetLogs\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nFlush logs()\n\n\nFlush logs, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nflushLogs\n();\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\ncreateConnector(data)\n\n\nAdds a connector to the process, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\ncreateConnector\n({\n\n            \nparentId\n:\n \n58ecbfbb27218c3c9fa8b2ae\n,\n\n            \nparams\n:\n \n{\n\n                \ncode\n:\n \nreturn 1 == 1\n,\n\n                \nresults\n:\n \n{\n\n                    \ntrue\n:\n \n[],\n\n                    \nfalse\n:\n \n[]\n\n                \n}\n\n            \n}\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\nData parameter contains the parameters of the added connector.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nparentId\n\n\nString\n\n\nIdentifier of the connector previously registered in the system\n\n\n\n\n\n\nparams\n\n\nObject\n\n\nParameters of the added connector, defined by the parent connector type\n\n\n\n\n\n\n\n\nupdateConnector(id, data)\n\n\nUpdates process connector parameters, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nupdateConnector\n(\nid\n,\n \n{\n          \n            \nparams\n:\n \n{\n\n                \ncode\n:\n \nreturn 2 == 2\n,\n\n                \nresults\n:\n \n{\n\n                    \ntrue\n:\n \n[],\n\n                    \nfalse\n:\n \n[]\n\n                \n}\n\n            \n}\n\n        \n});\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nid\n\n\nString\n\n\nConnector identifier\n\n\n\n\n\n\nparams\n\n\nObject\n\n\nParameters of the added connector, defined by the parent connector type\n\n\n\n\n\n\n\n\nsetRelation(source, target)\n\n\nCreates a connection between the connectors, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nsetRelation\n(\nid1\n,\n \nid2\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsource\n\n\nString\n\n\nParent connector identifier\n\n\n\n\n\n\ntarget\n\n\nString\n\n\nParent connector identifier\n\n\n\n\n\n\n\n\nsetRelationName(source, target, name)\n\n\nSets up the child connector so that it is executed only at a particular parent connector value, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nsetRelationName\n(\nid1\n,\n \nid2\n,\n \ntrue\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsource\n\n\nString\n\n\nParent connector identifier\n\n\n\n\n\n\ntarget\n\n\nString\n\n\nParent connector identifier\n\n\n\n\n\n\nname\n\n\nString\n\n\nName of the connector execution result\n\n\n\n\n\n\n\n\nunsetRelation(source, target)\n\n\nDeletes the connection between connectors, function returns Promise.\n\n\nconst\n \nservice\n \n=\n \nnew\n \nMixapp\n.\nService\n([\noptions\n])\n\n\nservice\n.\nworkplaces\n.\nget\n(\nworkplace\n)\n\n    \n.\nthen\n(\nworkplace\n \n=\n \n{\n\n        \nreturn\n \nworkplace\n.\nprocess\n.\nget\n(\nid\n);\n\n    \n})\n\n    \n.\nthen\n(\nprocess\n \n=\n \n{\n\n        \nreturn\n \nprocess\n.\nunsetRelation\n(\nid1\n,\n \nid2\n);\n\n    \n})\n\n    \n.\ncatch\n(\nerr\n \n=\n \n{})\n\n\n\n\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nsource\n\n\nString\n\n\nParent connector identifier\n\n\n\n\n\n\ntarget\n\n\nString\n\n\nParent connector identifier", 
            "title": "Process"
        }, 
        {
            "location": "/sdk/js/process/#fetch", 
            "text": "Updates local class, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . fetch (); \n     }) \n     . catch ( err   =   {})", 
            "title": "fetch()"
        }, 
        {
            "location": "/sdk/js/process/#updatedata", 
            "text": "Updates the process, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . update ({ \n             title :   New Process \n         }); \n     }) \n     . catch ( err   =   {})   Data parameter contains the updated parameters of the process.     Name  Type  Description      title  String  Process name", 
            "title": "update(data)"
        }, 
        {
            "location": "/sdk/js/process/#clonedata", 
            "text": "Clones a process, function returns Promise.     Name  Type  Description      data.title  String  Process name     const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . clone ({ \n             title :   New title \n         }); \n     }) \n     . catch ( err   =   {})", 
            "title": "clone(data)"
        }, 
        {
            "location": "/sdk/js/process/#remove", 
            "text": "Deletes the process, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . remove (); \n     }) \n     . catch ( err   =   {})", 
            "title": "remove()"
        }, 
        {
            "location": "/sdk/js/process/#start", 
            "text": "Starts the process, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . start (); \n     }) \n     . catch ( err   =   {})      Name  Type  Description", 
            "title": "start()"
        }, 
        {
            "location": "/sdk/js/process/#stop", 
            "text": "Stops the process, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . stop (); \n     }) \n     . catch ( err   =   {})", 
            "title": "stop()"
        }, 
        {
            "location": "/sdk/js/process/#list-logs", 
            "text": "Gets list of logs, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . getLogs (); \n     }) \n     . catch ( err   =   {})", 
            "title": "List logs()"
        }, 
        {
            "location": "/sdk/js/process/#flush-logs", 
            "text": "Flush logs, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . flushLogs (); \n     }) \n     . catch ( err   =   {})", 
            "title": "Flush logs()"
        }, 
        {
            "location": "/sdk/js/process/#createconnectordata", 
            "text": "Adds a connector to the process, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . createConnector ({ \n             parentId :   58ecbfbb27218c3c9fa8b2ae , \n             params :   { \n                 code :   return 1 == 1 , \n                 results :   { \n                     true :   [], \n                     false :   [] \n                 } \n             } \n         }); \n     }) \n     . catch ( err   =   {})   Data parameter contains the parameters of the added connector.     Name  Type  Description      parentId  String  Identifier of the connector previously registered in the system    params  Object  Parameters of the added connector, defined by the parent connector type", 
            "title": "createConnector(data)"
        }, 
        {
            "location": "/sdk/js/process/#updateconnectorid-data", 
            "text": "Updates process connector parameters, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . updateConnector ( id ,   {           \n             params :   { \n                 code :   return 2 == 2 , \n                 results :   { \n                     true :   [], \n                     false :   [] \n                 } \n             } \n         }); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      id  String  Connector identifier    params  Object  Parameters of the added connector, defined by the parent connector type", 
            "title": "updateConnector(id, data)"
        }, 
        {
            "location": "/sdk/js/process/#setrelationsource-target", 
            "text": "Creates a connection between the connectors, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . setRelation ( id1 ,   id2 ); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      source  String  Parent connector identifier    target  String  Parent connector identifier", 
            "title": "setRelation(source, target)"
        }, 
        {
            "location": "/sdk/js/process/#setrelationnamesource-target-name", 
            "text": "Sets up the child connector so that it is executed only at a particular parent connector value, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . setRelationName ( id1 ,   id2 ,   true ); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      source  String  Parent connector identifier    target  String  Parent connector identifier    name  String  Name of the connector execution result", 
            "title": "setRelationName(source, target, name)"
        }, 
        {
            "location": "/sdk/js/process/#unsetrelationsource-target", 
            "text": "Deletes the connection between connectors, function returns Promise.  const   service   =   new   Mixapp . Service ([ options ])  service . workplaces . get ( workplace ) \n     . then ( workplace   =   { \n         return   workplace . process . get ( id ); \n     }) \n     . then ( process   =   { \n         return   process . unsetRelation ( id1 ,   id2 ); \n     }) \n     . catch ( err   =   {})      Name  Type  Description      source  String  Parent connector identifier    target  String  Parent connector identifier", 
            "title": "unsetRelation(source, target)"
        }, 
        {
            "location": "/main/errors/", 
            "text": "Error codes:\n\n\nAll returned errors have the following form:\n\n\n{ \n    error_code: \nint\n,\n    error_message: \nstring\n,\n    more_info: \nstring\n\n}\n\n\n\n\n\nCode description\n\n\n500\n\n\n{ \n    error_code: 500,\n    error_message: \nInternal error\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#500\n\n}\n\n\n\n\n\nInternal error, error data logged additionally. \n\n\n600\n\n\n{ \n    error_code: 600,\n    error_message: \nWorkplace not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#600\n\n}\n\n\n\n\n\nError occurs when a non-existent workplace is addressed.\n\n\n601\n\n\n{ \n    error_code: 601,\n    error_message: \nWorkplace schema isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#601\n\n}\n\n\n\n\n\nError occurs when an invalid scheme is transmitted or when an error has \noccurred in the type of transmitted data while saving or updating. \n\n\n602\n\n\n{ \n    error_code: 602,\n    error_message: \nWorkplace is already exist\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#602\n\n}\n\n\n\n\n\nError occurs if this workplace already exists.\n\n\n603\n\n\n{ \n    error_code: 603,\n    error_message: \nName of workplace is incorrect\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#603\n\n}\n\n\n\n\n\nError occurs if workplace name in the query has a wrong format or is empty.\n\n\n604\n\n\n{ \n    error_code: 604,\n    error_message: \nStorage schema is invalid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#604\n\n}\n\n\n\n\n\nError occurs if an invalid scheme is transmitted while creating the storage \nor if an error has occurred in the type of transmitted data while saving or updating.\n\n\n605\n\n\n{ \n    error_code: 605,\n    error_message: \nACL of storage isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#605\n\n}\n\n\n\n\n\nInvalid ACL transmitted in the query.\n\n\n606\n\n\n{ \n    error_code: 606,\n    error_message: \nExceeded max number of storages\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#606\n\n}\n\n\n\n\n\nMaximum number of storages reached.\n\n\n607\n\n\n{ \n    error_code: 607,\n    error_message: \nName of storage is already exist\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#607\n\n}\n\n\n\n\n\nA storage with this name already exists.\n\n\n608\n\n\n{ \n    error_code: 608,\n    error_message: \nName of storage must be more 3 chars\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#608\n\n}\n\n\n\n\n\nStorage name cannot be less than 3 symbols.\n\n\n609\n\n\n{ \n    error_code: 609,\n    error_message: \nName of storage not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#609\n\n}\n\n\n\n\n\nError occurs when a non-existent storage is requested.\n\n\n610\n\n\n{ \n    error_code: 610,\n    error_message: \nId of storage isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#610\n\n}\n\n\n\n\n\nInvalid storage identifier transmitted.\n\n\n611\n\n\n{ \n    error_code: 611,\n    error_message: \nIndex isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#611\n\n}\n\n\n\n\n\nInvalid index transmitted.\n\n\n612\n\n\n{ \n    error_code: 612,\n    error_message: \nStorage protocol isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#612\n\n}\n\n\n\n\n\nInvalid format transmitted for working with storage files.\n\n\n613\n\n\n{ \n    error_code: 613,\n    error_message: \nProcess schema isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#613\n\n}\n\n\n\n\n\nInvalid process data transmitted or an error has occurred in the type of \ndata transmitted.\n\n\n614\n\n\n{ \n    error_code: 614,\n    error_message: \nTitle of process must be more than 3 chars\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#614\n\n}\n\n\n\n\n\nProcess name cannot be less than 3 symbols.\n\n\n615\n\n\n{ \n    error_code: 615,\n    error_message: \nName of variable is invalid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#615\n\n}\n\n\n\n\n\nVariable name empty or invalid.\n\n\n616\n\n\n{ \n    error_code: 616,\n    error_message: \nUnknown variable type\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#616\n\n}\n\n\n\n\n\nUnknown variable type transmitted.\n\n\n617\n\n\n{ \n    error_code: 617,\n    error_message: \nId of ACL is invalid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#617\n\n}\n\n\n\n\n\nInvalid ACL transmitted.\n\n\n618\n\n\n{ \n    error_code: 618,\n    error_message: \nProcess not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#618\n\n}\n\n\n\n\n\nNon-existent or remote process requested.\n\n\n619\n\n\n{ \n    error_code: 619,\n    error_message: \nProcess is running, can\nt edit\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#619\n\n}\n\n\n\n\n\nThis error occurs when updating a running process is attempted.\n\n\n620\n\n\n{ \n    error_code: 620,\n    error_message: \nId of process isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#620\n\n}\n\n\n\n\n\nInvalid process identifier transmitted.\n\n\n621\n\n\n{ \n    error_code: 621,\n    error_message: \nSchema of connector isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#621\n\n}\n\n\n\n\n\nInvalid connector format transmitted or an error has occurred in connector type.\n\n\n622\n\n\n{ \n    error_code: 622,\n    error_message: \nUnknown connector type\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#622\n\n}\n\n\n\n\n\nUnknown connector type transmitted.\n\n\n623\n\n\n{ \n    error_code: 623,\n    error_message: \nMissing \nsome text\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#623\n\n}\n\n\n\n\n\nError occurs at connector validation and indicates that an obligatory \nsection in connector parameters has been omitted.\n\n\n624\n\n\n{ \n    error_code: 624,\n    error_message: \nInvalid type of connector\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#624\n\n}\n\n\n\n\n\nError occurs when trying to create a \u201cstart\u201d or \u201cstop\u201d type connector.\n\n\n625\n\n\n{ \n    error_code: 625,\n    error_message: \nsome text\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#625\n\n}\n\n\n\n\n\nError occurs if the user handler for connector parameters returns an \nerror at validation. Error text is set by the user in the handler.\n\n\n626\n\n\n{ \n    error_code: 626,\n    error_message: \nId of connector isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#626\n\n}\n\n\n\n\n\nInvalid connector identifier transmitted.\n\n\n627\n\n\n{ \n    error_code: 627,\n    error_message: \nConnector not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#627\n\n}\n\n\n\n\n\nError occurs when a non-existent connector is addressed.\n\n\n628\n\n\n{ \n    error_code: 628,\n    error_message: \nNot equal types\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#628\n\n}\n\n\n\n\n\nError occurs at connector update if a type is transmitted that does not \ncorrespond to the initial type. \n\n\n629\n\n\n{ \n    error_code: 629,\n    error_message: \nUse different ids\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#629\n\n}\n\n\n\n\n\nError occurs when the connector tries to connect to itself.\n\n\n630\n\n\n{ \n    error_code: 630,\n    error_message: \nStop can\nt be parent\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#630\n\n}\n\n\n\n\n\nError occurs at attempt to create a connector with a \u201cstop\u201d type outbound \nconnection.\n\n\n631\n\n\n{ \n    error_code: 631,\n    error_message: \nThe timer may have only one child\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#631\n\n}\n\n\n\n\n\nError occurs if more than one child connector attempts to connect to the timer.\n\n\n632\n\n\n{ \n    error_code: 632,\n    error_message: \nStart can\nt have parent\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#632\n\n}\n\n\n\n\n\nError occurs at connection attempt when a \u201cstart\u201d connector acts as a child connector.\n\n\n633\n\n\n{ \n    error_code: 633,\n    error_message: \nThe timer may have only one parent\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#633\n\n}\n\n\n\n\n\nError occurs if more than one parent connector attempts to connect to the timer.\n\n\n634\n\n\n{ \n    error_code: 634,\n    error_message: \nAlias already exists\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#634\n\n}\n\n\n\n\n\nError occurs if a connection between the connectors already exists.\n\n\n635\n\n\n{ \n    error_code: 635,\n    error_message: \nAlias not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#635\n\n}\n\n\n\n\n\nError occurs if no connection between the connectors has been established.\n\n\n636\n\n\n{ \n    error_code: 636,\n    error_message: \nAlias allows only for task or case\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#636\n\n}\n\n\n\n\n\nConnection name can only be established for steps of the following type: \u201ccase\u201d, \u201ctask\u201d. \n\n\n637\n\n\n{ \n    error_code: 637,\n    error_message: \nUnknown result name\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#637\n\n}\n\n\n\n\n\nError occurs when creating connection name, if the branch for this name is not specified in the parameters of the \u201cresults\u201d section.\n\n\n638\n\n\n{ \n    error_code: 638,\n    error_message: \nId already exists\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#638\n\n}\n\n\n\n\n\nError occurs when validating the \u201cresults\u201d section for a \u201ccase\u201d type step, \nif the child connector identifier is already contained in the array for this section.\n\n\n639\n\n\n{ \n    error_code: 639,\n    error_message: \nSchema of variable isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#639\n\n}\n\n\n\n\n\nError occurs if an invalid scheme is transmitted for the variable or if \nan error has occurred in the type of data transmitted.\n\n\n640\n\n\n{ \n    error_code: 640,\n    error_message: \nVariable already exists\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#640\n\n}\n\n\n\n\n\nError occurs if an existing variable is created. \n\n\n641\n\n\n{ \n    error_code: 641,\n    error_message: \nValue of string is incorrect\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#641\n\n}\n\n\n\n\n\nError occurs if an invalid string type is transmitted in the \u201cvalue\u201d section.\n\n\n642\n\n\n{ \n    error_code: 642,\n    error_message: \nValue of date is incorrect\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#642\n\n}\n\n\n\n\n\nError occurs if an invalid date type is transmitted in the \u201cvalue\u201d section.\n\n\n643\n\n\n{ \n    error_code: 643,\n    error_message: \nVariable isn\nt set\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#643\n\n}\n\n\n\n\n\nError occurs if no values for obligatory variables were transmitted in \nthe request when creating the process.\n\n\n644\n\n\n{ \n    error_code: 644,\n    error_message: \nIncorrect type of variable\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#644\n\n}\n\n\n\n\n\nError occurs if the transmitted variable has a different type at the time of process creation.\n\n\n645\n\n\n{ \n    error_code: 645,\n    error_message: \nConnector has no previous connectors\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#645\n\n}\n\n\n\n\n\nError occurs if the handled connector has no connection to the parent connector.\n\n\n646\n\n\n{ \n    error_code: 646,\n    error_message: \nParent \u0441onnector is not equal to a current connector\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#646\n\n}\n\n\n\n\n\nError occurs if the connector to be handled has no connection to the executing connector.\n\n\n647\n\n\n{ \n    error_code: 647,\n    error_message: \nInvalid parentId\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#647\n\n}\n\n\n\n\n\nThe error occurs if an invalid identifier of the inherited connector is transmitted.\n\n\n648\n\n\n{ \n    error_code: 648,\n    error_message: \nParent connector not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#648\n\n}\n\n\n\n\n\nThe error occurs if the inherited connector is not found.\n\n\n649\n\n\n{ \n    error_code: 649,\n    error_message: \nEmail isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#649\n\n}\n\n\n\n\n\nThe error occurs if an invalid or empty e-mail is transmitted.\n\n\n650\n\n\n{ \n    error_code: 650,\n    error_message: \nUser name must be longer than 5 chars\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#650\n\n}\n\n\n\n\n\nUser name must contain at least 5 characters\n\n\n651\n\n\n{ \n    error_code: 651,\n    error_message: \nNPM Module isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#651\n\n}\n\n\n\n\n\nThe error occurs if an invalid npm module value is transmitted.\n\n\n652\n\n\n{ \n    error_code: 652,\n    error_message: \nUser already exist\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#652\n\n}\n\n\n\n\n\nThe error occurs if this user name already exists in the system\n\n\n653\n\n\n{ \n    error_code: 653,\n    error_message: \nUser schema isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#653\n\n}\n\n\n\n\n\nThe error occurs if invalid user data has been transmitted\n\n\n654\n\n\n{ \n    error_code: 654,\n    error_message: \nAccess Forbiden\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#654\n\n}\n\n\n\n\n\nThe error occurs if the rights for the action are insufficient.\n\n\n655\n\n\n{ \n    error_code: 655,\n    error_message: \nUnauthorized\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#655\n\n}\n\n\n\n\n\nThe error occurs if authorization is required\n\n\n656\n\n\n{ \n    error_code: 656,\n    error_message: \nPassword must be more than 8 chars\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#656\n\n}\n\n\n\n\n\nPassword must contain at least 8 characters\n\n\n657\n\n\n{ \n    error_code: 657,\n    error_message: \nIndex name is empty\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#657\n\n}\n\n\n\n\n\nIndex name is empty\n\n\n658\n\n\n{ \n    error_code: 658,\n    error_message: \nOwner is empty\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#658\n\n}\n\n\n\n\n\nOwner is empty\n\n\n659\n\n\n{ \n    error_code: 659,\n    error_message: \nTitle is empty\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#659\n\n}\n\n\n\n\n\nTitle is empty\n\n\n660\n\n\n{ \n    error_code: 660,\n    error_message: \nOrder schema is invalid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#660\n\n}\n\n\n\n\n\nOrder schema is invalid\n\n\n661\n\n\n{ \n    error_code: 661,\n    error_message: \nInvalid planId\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#661\n\n}\n\n\n\n\n\nInvalid planId\n\n\n662\n\n\n{ \n    error_code: 662,\n    error_message: \nInvalid userId\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#662\n\n}\n\n\n\n\n\nInvalid userId\n\n\n663\n\n\n{ \n    error_code: 663,\n    error_message: \nPlan not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#663\n\n}\n\n\n\n\n\nPlan not found\n\n\n664\n\n\n{ \n    error_code: 664,\n    error_message: \nInsufficient funds\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#664\n\n}\n\n\n\n\n\nInsufficient funds\n\n\n665\n\n\n{ \n    error_code: 665,\n    error_message: \nUser not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#665\n\n}\n\n\n\n\n\nUser not found\n\n\n666\n\n\n{ \n    error_code: 666,\n    error_message: \nKey schema isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#666\n\n}\n\n\n\n\n\nKey schema isn't valid\n\n\n667\n\n\n{ \n    error_code: 667,\n    error_message: \nContext not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#667\n\n}\n\n\n\n\n\nContext not found\n\n\n668\n\n\n{ \n    error_code: 668,\n    error_message: \nWebhook not found\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#668\n\n}\n\n\n\n\n\nWebhook not found\n\n\n669\n\n\n{ \n    error_code: 669,\n    error_message: \n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#669\n\n}\n\n\n\n\n\nErrors while executing the connector\n\n\n670\n\n\n{ \n    error_code: 670,\n    error_message: \nConnector schema isn\nt valid\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#670\n\n}\n\n\n\n\n\nConnector schema isn't valid\n\n\n671\n\n\n{ \n    error_code: 671,\n    error_message: \nConnector name is empty\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#671\n\n}\n\n\n\n\n\nConnector name is empty\n\n\n672\n\n\n{ \n    error_code: 672,\n    error_message: \nConnector must have exutable code\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#672\n\n}\n\n\n\n\n\nConnector must have exutable code\n\n\n673\n\n\n{ \n    error_code: 673,\n    error_message: \nConnector contained invalid param\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#673\n\n}\n\n\n\n\n\nConnector contained invalid param\n\n\n674\n\n\n{ \n    error_code: 674,\n    error_message: \nNot implementate yet\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#674\n\n}\n\n\n\n\n\nNot implementate yet\n\n\n675\n\n\n{ \n    error_code: 675,\n    error_message: \nCan not remove a system connector\n,\n    more_info: \nhttps://mixapp.github.io/main/errors/#675\n\n}\n\n\n\n\n\nCan not remove a system connector", 
            "title": "Error codes"
        }, 
        {
            "location": "/main/errors/#error-codes", 
            "text": "All returned errors have the following form:  { \n    error_code:  int ,\n    error_message:  string ,\n    more_info:  string \n}", 
            "title": "Error codes:"
        }, 
        {
            "location": "/main/errors/#code-description", 
            "text": "", 
            "title": "Code description"
        }, 
        {
            "location": "/main/errors/#500", 
            "text": "{ \n    error_code: 500,\n    error_message:  Internal error ,\n    more_info:  https://mixapp.github.io/main/errors/#500 \n}  Internal error, error data logged additionally.", 
            "title": "500"
        }, 
        {
            "location": "/main/errors/#600", 
            "text": "{ \n    error_code: 600,\n    error_message:  Workplace not found ,\n    more_info:  https://mixapp.github.io/main/errors/#600 \n}  Error occurs when a non-existent workplace is addressed.", 
            "title": "600"
        }, 
        {
            "location": "/main/errors/#601", 
            "text": "{ \n    error_code: 601,\n    error_message:  Workplace schema isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#601 \n}  Error occurs when an invalid scheme is transmitted or when an error has \noccurred in the type of transmitted data while saving or updating.", 
            "title": "601"
        }, 
        {
            "location": "/main/errors/#602", 
            "text": "{ \n    error_code: 602,\n    error_message:  Workplace is already exist ,\n    more_info:  https://mixapp.github.io/main/errors/#602 \n}  Error occurs if this workplace already exists.", 
            "title": "602"
        }, 
        {
            "location": "/main/errors/#603", 
            "text": "{ \n    error_code: 603,\n    error_message:  Name of workplace is incorrect ,\n    more_info:  https://mixapp.github.io/main/errors/#603 \n}  Error occurs if workplace name in the query has a wrong format or is empty.", 
            "title": "603"
        }, 
        {
            "location": "/main/errors/#604", 
            "text": "{ \n    error_code: 604,\n    error_message:  Storage schema is invalid ,\n    more_info:  https://mixapp.github.io/main/errors/#604 \n}  Error occurs if an invalid scheme is transmitted while creating the storage \nor if an error has occurred in the type of transmitted data while saving or updating.", 
            "title": "604"
        }, 
        {
            "location": "/main/errors/#605", 
            "text": "{ \n    error_code: 605,\n    error_message:  ACL of storage isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#605 \n}  Invalid ACL transmitted in the query.", 
            "title": "605"
        }, 
        {
            "location": "/main/errors/#606", 
            "text": "{ \n    error_code: 606,\n    error_message:  Exceeded max number of storages ,\n    more_info:  https://mixapp.github.io/main/errors/#606 \n}  Maximum number of storages reached.", 
            "title": "606"
        }, 
        {
            "location": "/main/errors/#607", 
            "text": "{ \n    error_code: 607,\n    error_message:  Name of storage is already exist ,\n    more_info:  https://mixapp.github.io/main/errors/#607 \n}  A storage with this name already exists.", 
            "title": "607"
        }, 
        {
            "location": "/main/errors/#608", 
            "text": "{ \n    error_code: 608,\n    error_message:  Name of storage must be more 3 chars ,\n    more_info:  https://mixapp.github.io/main/errors/#608 \n}  Storage name cannot be less than 3 symbols.", 
            "title": "608"
        }, 
        {
            "location": "/main/errors/#609", 
            "text": "{ \n    error_code: 609,\n    error_message:  Name of storage not found ,\n    more_info:  https://mixapp.github.io/main/errors/#609 \n}  Error occurs when a non-existent storage is requested.", 
            "title": "609"
        }, 
        {
            "location": "/main/errors/#610", 
            "text": "{ \n    error_code: 610,\n    error_message:  Id of storage isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#610 \n}  Invalid storage identifier transmitted.", 
            "title": "610"
        }, 
        {
            "location": "/main/errors/#611", 
            "text": "{ \n    error_code: 611,\n    error_message:  Index isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#611 \n}  Invalid index transmitted.", 
            "title": "611"
        }, 
        {
            "location": "/main/errors/#612", 
            "text": "{ \n    error_code: 612,\n    error_message:  Storage protocol isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#612 \n}  Invalid format transmitted for working with storage files.", 
            "title": "612"
        }, 
        {
            "location": "/main/errors/#613", 
            "text": "{ \n    error_code: 613,\n    error_message:  Process schema isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#613 \n}  Invalid process data transmitted or an error has occurred in the type of \ndata transmitted.", 
            "title": "613"
        }, 
        {
            "location": "/main/errors/#614", 
            "text": "{ \n    error_code: 614,\n    error_message:  Title of process must be more than 3 chars ,\n    more_info:  https://mixapp.github.io/main/errors/#614 \n}  Process name cannot be less than 3 symbols.", 
            "title": "614"
        }, 
        {
            "location": "/main/errors/#615", 
            "text": "{ \n    error_code: 615,\n    error_message:  Name of variable is invalid ,\n    more_info:  https://mixapp.github.io/main/errors/#615 \n}  Variable name empty or invalid.", 
            "title": "615"
        }, 
        {
            "location": "/main/errors/#616", 
            "text": "{ \n    error_code: 616,\n    error_message:  Unknown variable type ,\n    more_info:  https://mixapp.github.io/main/errors/#616 \n}  Unknown variable type transmitted.", 
            "title": "616"
        }, 
        {
            "location": "/main/errors/#617", 
            "text": "{ \n    error_code: 617,\n    error_message:  Id of ACL is invalid ,\n    more_info:  https://mixapp.github.io/main/errors/#617 \n}  Invalid ACL transmitted.", 
            "title": "617"
        }, 
        {
            "location": "/main/errors/#618", 
            "text": "{ \n    error_code: 618,\n    error_message:  Process not found ,\n    more_info:  https://mixapp.github.io/main/errors/#618 \n}  Non-existent or remote process requested.", 
            "title": "618"
        }, 
        {
            "location": "/main/errors/#619", 
            "text": "{ \n    error_code: 619,\n    error_message:  Process is running, can t edit ,\n    more_info:  https://mixapp.github.io/main/errors/#619 \n}  This error occurs when updating a running process is attempted.", 
            "title": "619"
        }, 
        {
            "location": "/main/errors/#620", 
            "text": "{ \n    error_code: 620,\n    error_message:  Id of process isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#620 \n}  Invalid process identifier transmitted.", 
            "title": "620"
        }, 
        {
            "location": "/main/errors/#621", 
            "text": "{ \n    error_code: 621,\n    error_message:  Schema of connector isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#621 \n}  Invalid connector format transmitted or an error has occurred in connector type.", 
            "title": "621"
        }, 
        {
            "location": "/main/errors/#622", 
            "text": "{ \n    error_code: 622,\n    error_message:  Unknown connector type ,\n    more_info:  https://mixapp.github.io/main/errors/#622 \n}  Unknown connector type transmitted.", 
            "title": "622"
        }, 
        {
            "location": "/main/errors/#623", 
            "text": "{ \n    error_code: 623,\n    error_message:  Missing  some text ,\n    more_info:  https://mixapp.github.io/main/errors/#623 \n}  Error occurs at connector validation and indicates that an obligatory \nsection in connector parameters has been omitted.", 
            "title": "623"
        }, 
        {
            "location": "/main/errors/#624", 
            "text": "{ \n    error_code: 624,\n    error_message:  Invalid type of connector ,\n    more_info:  https://mixapp.github.io/main/errors/#624 \n}  Error occurs when trying to create a \u201cstart\u201d or \u201cstop\u201d type connector.", 
            "title": "624"
        }, 
        {
            "location": "/main/errors/#625", 
            "text": "{ \n    error_code: 625,\n    error_message:  some text ,\n    more_info:  https://mixapp.github.io/main/errors/#625 \n}  Error occurs if the user handler for connector parameters returns an \nerror at validation. Error text is set by the user in the handler.", 
            "title": "625"
        }, 
        {
            "location": "/main/errors/#626", 
            "text": "{ \n    error_code: 626,\n    error_message:  Id of connector isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#626 \n}  Invalid connector identifier transmitted.", 
            "title": "626"
        }, 
        {
            "location": "/main/errors/#627", 
            "text": "{ \n    error_code: 627,\n    error_message:  Connector not found ,\n    more_info:  https://mixapp.github.io/main/errors/#627 \n}  Error occurs when a non-existent connector is addressed.", 
            "title": "627"
        }, 
        {
            "location": "/main/errors/#628", 
            "text": "{ \n    error_code: 628,\n    error_message:  Not equal types ,\n    more_info:  https://mixapp.github.io/main/errors/#628 \n}  Error occurs at connector update if a type is transmitted that does not \ncorrespond to the initial type.", 
            "title": "628"
        }, 
        {
            "location": "/main/errors/#629", 
            "text": "{ \n    error_code: 629,\n    error_message:  Use different ids ,\n    more_info:  https://mixapp.github.io/main/errors/#629 \n}  Error occurs when the connector tries to connect to itself.", 
            "title": "629"
        }, 
        {
            "location": "/main/errors/#630", 
            "text": "{ \n    error_code: 630,\n    error_message:  Stop can t be parent ,\n    more_info:  https://mixapp.github.io/main/errors/#630 \n}  Error occurs at attempt to create a connector with a \u201cstop\u201d type outbound \nconnection.", 
            "title": "630"
        }, 
        {
            "location": "/main/errors/#631", 
            "text": "{ \n    error_code: 631,\n    error_message:  The timer may have only one child ,\n    more_info:  https://mixapp.github.io/main/errors/#631 \n}  Error occurs if more than one child connector attempts to connect to the timer.", 
            "title": "631"
        }, 
        {
            "location": "/main/errors/#632", 
            "text": "{ \n    error_code: 632,\n    error_message:  Start can t have parent ,\n    more_info:  https://mixapp.github.io/main/errors/#632 \n}  Error occurs at connection attempt when a \u201cstart\u201d connector acts as a child connector.", 
            "title": "632"
        }, 
        {
            "location": "/main/errors/#633", 
            "text": "{ \n    error_code: 633,\n    error_message:  The timer may have only one parent ,\n    more_info:  https://mixapp.github.io/main/errors/#633 \n}  Error occurs if more than one parent connector attempts to connect to the timer.", 
            "title": "633"
        }, 
        {
            "location": "/main/errors/#634", 
            "text": "{ \n    error_code: 634,\n    error_message:  Alias already exists ,\n    more_info:  https://mixapp.github.io/main/errors/#634 \n}  Error occurs if a connection between the connectors already exists.", 
            "title": "634"
        }, 
        {
            "location": "/main/errors/#635", 
            "text": "{ \n    error_code: 635,\n    error_message:  Alias not found ,\n    more_info:  https://mixapp.github.io/main/errors/#635 \n}  Error occurs if no connection between the connectors has been established.", 
            "title": "635"
        }, 
        {
            "location": "/main/errors/#636", 
            "text": "{ \n    error_code: 636,\n    error_message:  Alias allows only for task or case ,\n    more_info:  https://mixapp.github.io/main/errors/#636 \n}  Connection name can only be established for steps of the following type: \u201ccase\u201d, \u201ctask\u201d.", 
            "title": "636"
        }, 
        {
            "location": "/main/errors/#637", 
            "text": "{ \n    error_code: 637,\n    error_message:  Unknown result name ,\n    more_info:  https://mixapp.github.io/main/errors/#637 \n}  Error occurs when creating connection name, if the branch for this name is not specified in the parameters of the \u201cresults\u201d section.", 
            "title": "637"
        }, 
        {
            "location": "/main/errors/#638", 
            "text": "{ \n    error_code: 638,\n    error_message:  Id already exists ,\n    more_info:  https://mixapp.github.io/main/errors/#638 \n}  Error occurs when validating the \u201cresults\u201d section for a \u201ccase\u201d type step, \nif the child connector identifier is already contained in the array for this section.", 
            "title": "638"
        }, 
        {
            "location": "/main/errors/#639", 
            "text": "{ \n    error_code: 639,\n    error_message:  Schema of variable isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#639 \n}  Error occurs if an invalid scheme is transmitted for the variable or if \nan error has occurred in the type of data transmitted.", 
            "title": "639"
        }, 
        {
            "location": "/main/errors/#640", 
            "text": "{ \n    error_code: 640,\n    error_message:  Variable already exists ,\n    more_info:  https://mixapp.github.io/main/errors/#640 \n}  Error occurs if an existing variable is created.", 
            "title": "640"
        }, 
        {
            "location": "/main/errors/#641", 
            "text": "{ \n    error_code: 641,\n    error_message:  Value of string is incorrect ,\n    more_info:  https://mixapp.github.io/main/errors/#641 \n}  Error occurs if an invalid string type is transmitted in the \u201cvalue\u201d section.", 
            "title": "641"
        }, 
        {
            "location": "/main/errors/#642", 
            "text": "{ \n    error_code: 642,\n    error_message:  Value of date is incorrect ,\n    more_info:  https://mixapp.github.io/main/errors/#642 \n}  Error occurs if an invalid date type is transmitted in the \u201cvalue\u201d section.", 
            "title": "642"
        }, 
        {
            "location": "/main/errors/#643", 
            "text": "{ \n    error_code: 643,\n    error_message:  Variable isn t set ,\n    more_info:  https://mixapp.github.io/main/errors/#643 \n}  Error occurs if no values for obligatory variables were transmitted in \nthe request when creating the process.", 
            "title": "643"
        }, 
        {
            "location": "/main/errors/#644", 
            "text": "{ \n    error_code: 644,\n    error_message:  Incorrect type of variable ,\n    more_info:  https://mixapp.github.io/main/errors/#644 \n}  Error occurs if the transmitted variable has a different type at the time of process creation.", 
            "title": "644"
        }, 
        {
            "location": "/main/errors/#645", 
            "text": "{ \n    error_code: 645,\n    error_message:  Connector has no previous connectors ,\n    more_info:  https://mixapp.github.io/main/errors/#645 \n}  Error occurs if the handled connector has no connection to the parent connector.", 
            "title": "645"
        }, 
        {
            "location": "/main/errors/#646", 
            "text": "{ \n    error_code: 646,\n    error_message:  Parent \u0441onnector is not equal to a current connector ,\n    more_info:  https://mixapp.github.io/main/errors/#646 \n}  Error occurs if the connector to be handled has no connection to the executing connector.", 
            "title": "646"
        }, 
        {
            "location": "/main/errors/#647", 
            "text": "{ \n    error_code: 647,\n    error_message:  Invalid parentId ,\n    more_info:  https://mixapp.github.io/main/errors/#647 \n}  The error occurs if an invalid identifier of the inherited connector is transmitted.", 
            "title": "647"
        }, 
        {
            "location": "/main/errors/#648", 
            "text": "{ \n    error_code: 648,\n    error_message:  Parent connector not found ,\n    more_info:  https://mixapp.github.io/main/errors/#648 \n}  The error occurs if the inherited connector is not found.", 
            "title": "648"
        }, 
        {
            "location": "/main/errors/#649", 
            "text": "{ \n    error_code: 649,\n    error_message:  Email isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#649 \n}  The error occurs if an invalid or empty e-mail is transmitted.", 
            "title": "649"
        }, 
        {
            "location": "/main/errors/#650", 
            "text": "{ \n    error_code: 650,\n    error_message:  User name must be longer than 5 chars ,\n    more_info:  https://mixapp.github.io/main/errors/#650 \n}  User name must contain at least 5 characters", 
            "title": "650"
        }, 
        {
            "location": "/main/errors/#651", 
            "text": "{ \n    error_code: 651,\n    error_message:  NPM Module isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#651 \n}  The error occurs if an invalid npm module value is transmitted.", 
            "title": "651"
        }, 
        {
            "location": "/main/errors/#652", 
            "text": "{ \n    error_code: 652,\n    error_message:  User already exist ,\n    more_info:  https://mixapp.github.io/main/errors/#652 \n}  The error occurs if this user name already exists in the system", 
            "title": "652"
        }, 
        {
            "location": "/main/errors/#653", 
            "text": "{ \n    error_code: 653,\n    error_message:  User schema isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#653 \n}  The error occurs if invalid user data has been transmitted", 
            "title": "653"
        }, 
        {
            "location": "/main/errors/#654", 
            "text": "{ \n    error_code: 654,\n    error_message:  Access Forbiden ,\n    more_info:  https://mixapp.github.io/main/errors/#654 \n}  The error occurs if the rights for the action are insufficient.", 
            "title": "654"
        }, 
        {
            "location": "/main/errors/#655", 
            "text": "{ \n    error_code: 655,\n    error_message:  Unauthorized ,\n    more_info:  https://mixapp.github.io/main/errors/#655 \n}  The error occurs if authorization is required", 
            "title": "655"
        }, 
        {
            "location": "/main/errors/#656", 
            "text": "{ \n    error_code: 656,\n    error_message:  Password must be more than 8 chars ,\n    more_info:  https://mixapp.github.io/main/errors/#656 \n}  Password must contain at least 8 characters", 
            "title": "656"
        }, 
        {
            "location": "/main/errors/#657", 
            "text": "{ \n    error_code: 657,\n    error_message:  Index name is empty ,\n    more_info:  https://mixapp.github.io/main/errors/#657 \n}  Index name is empty", 
            "title": "657"
        }, 
        {
            "location": "/main/errors/#658", 
            "text": "{ \n    error_code: 658,\n    error_message:  Owner is empty ,\n    more_info:  https://mixapp.github.io/main/errors/#658 \n}  Owner is empty", 
            "title": "658"
        }, 
        {
            "location": "/main/errors/#659", 
            "text": "{ \n    error_code: 659,\n    error_message:  Title is empty ,\n    more_info:  https://mixapp.github.io/main/errors/#659 \n}  Title is empty", 
            "title": "659"
        }, 
        {
            "location": "/main/errors/#660", 
            "text": "{ \n    error_code: 660,\n    error_message:  Order schema is invalid ,\n    more_info:  https://mixapp.github.io/main/errors/#660 \n}  Order schema is invalid", 
            "title": "660"
        }, 
        {
            "location": "/main/errors/#661", 
            "text": "{ \n    error_code: 661,\n    error_message:  Invalid planId ,\n    more_info:  https://mixapp.github.io/main/errors/#661 \n}  Invalid planId", 
            "title": "661"
        }, 
        {
            "location": "/main/errors/#662", 
            "text": "{ \n    error_code: 662,\n    error_message:  Invalid userId ,\n    more_info:  https://mixapp.github.io/main/errors/#662 \n}  Invalid userId", 
            "title": "662"
        }, 
        {
            "location": "/main/errors/#663", 
            "text": "{ \n    error_code: 663,\n    error_message:  Plan not found ,\n    more_info:  https://mixapp.github.io/main/errors/#663 \n}  Plan not found", 
            "title": "663"
        }, 
        {
            "location": "/main/errors/#664", 
            "text": "{ \n    error_code: 664,\n    error_message:  Insufficient funds ,\n    more_info:  https://mixapp.github.io/main/errors/#664 \n}  Insufficient funds", 
            "title": "664"
        }, 
        {
            "location": "/main/errors/#665", 
            "text": "{ \n    error_code: 665,\n    error_message:  User not found ,\n    more_info:  https://mixapp.github.io/main/errors/#665 \n}  User not found", 
            "title": "665"
        }, 
        {
            "location": "/main/errors/#666", 
            "text": "{ \n    error_code: 666,\n    error_message:  Key schema isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#666 \n}  Key schema isn't valid", 
            "title": "666"
        }, 
        {
            "location": "/main/errors/#667", 
            "text": "{ \n    error_code: 667,\n    error_message:  Context not found ,\n    more_info:  https://mixapp.github.io/main/errors/#667 \n}  Context not found", 
            "title": "667"
        }, 
        {
            "location": "/main/errors/#668", 
            "text": "{ \n    error_code: 668,\n    error_message:  Webhook not found ,\n    more_info:  https://mixapp.github.io/main/errors/#668 \n}  Webhook not found", 
            "title": "668"
        }, 
        {
            "location": "/main/errors/#669", 
            "text": "{ \n    error_code: 669,\n    error_message:  ,\n    more_info:  https://mixapp.github.io/main/errors/#669 \n}  Errors while executing the connector", 
            "title": "669"
        }, 
        {
            "location": "/main/errors/#670", 
            "text": "{ \n    error_code: 670,\n    error_message:  Connector schema isn t valid ,\n    more_info:  https://mixapp.github.io/main/errors/#670 \n}  Connector schema isn't valid", 
            "title": "670"
        }, 
        {
            "location": "/main/errors/#671", 
            "text": "{ \n    error_code: 671,\n    error_message:  Connector name is empty ,\n    more_info:  https://mixapp.github.io/main/errors/#671 \n}  Connector name is empty", 
            "title": "671"
        }, 
        {
            "location": "/main/errors/#672", 
            "text": "{ \n    error_code: 672,\n    error_message:  Connector must have exutable code ,\n    more_info:  https://mixapp.github.io/main/errors/#672 \n}  Connector must have exutable code", 
            "title": "672"
        }, 
        {
            "location": "/main/errors/#673", 
            "text": "{ \n    error_code: 673,\n    error_message:  Connector contained invalid param ,\n    more_info:  https://mixapp.github.io/main/errors/#673 \n}  Connector contained invalid param", 
            "title": "673"
        }, 
        {
            "location": "/main/errors/#674", 
            "text": "{ \n    error_code: 674,\n    error_message:  Not implementate yet ,\n    more_info:  https://mixapp.github.io/main/errors/#674 \n}  Not implementate yet", 
            "title": "674"
        }, 
        {
            "location": "/main/errors/#675", 
            "text": "{ \n    error_code: 675,\n    error_message:  Can not remove a system connector ,\n    more_info:  https://mixapp.github.io/main/errors/#675 \n}  Can not remove a system connector", 
            "title": "675"
        }, 
        {
            "location": "/standalone/", 
            "text": "You can use all the services of the MixApp cloud version. There is \nalso the option of rolling out the system using the standalone version. \n\n\nThis option is only available for corporate clients, please contact us for \nfurther details.", 
            "title": "Standalone"
        }
    ]
}